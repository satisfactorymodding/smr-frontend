{"version":3,"file":"CompatibilityModal.DqSvRVO7.js","sources":["../../../../../../src/lib/components/mods/compatibility/OutdatedBanner.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityStateText.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityIcon.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityInfo.svelte","../../../../../../src/lib/modals/CompatibilityModal.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import { CompatibilityState } from '$lib/generated';\n\n  export let compatibility: CompatibilityInfoInput;\n  export let logo = false;\n\n  function Worst(input: CompatibilityInfoInput): CompatibilityState {\n    const EA = input.EA.state;\n    if (EA == CompatibilityState.Broken) {\n      // Broken is always the worst\n      return EA;\n    }\n    if (EA == CompatibilityState.Works) {\n      return input.EXP.state; // Anything other than Works is worse\n    }\n    if (input.EXP.state != CompatibilityState.Works) {\n      // If it's not better then it is the worst\n      return input.EXP.state;\n    }\n    return EA;\n  }\n\n  let worst = CompatibilityState.Works;\n  $: if (compatibility) {\n    worst = Worst(compatibility);\n  } else {\n    worst = CompatibilityState.Works;\n  }\n  $: works = worst === CompatibilityState.Works;\n</script>\n\n{#if !works}\n  <div\n    class=\"mod-outdated-stripe\"\n    style=\"max-width: inherit;\"\n    class:mod-damaged={worst === CompatibilityState.Damaged}\n    class:mod-broken={worst === CompatibilityState.Broken}\n    class:mod-logo-outdated={logo} />\n{/if}\n","<script lang=\"ts\">\n  import type { CompatibilityState } from '$lib/generated';\n  import { getTranslate } from '@tolgee/svelte';\n  export let state: CompatibilityState = null;\n\n  export const { t } = getTranslate();\n\n  const textForState = state ?? ('Unknown' as CompatibilityState);\n  const classForState = (s: CompatibilityState): string => `mod-state-${s.toString().toLowerCase()}`;\n</script>\n\n<p class=\"{classForState(textForState)} mod-state\">\n  {$t(`compatibility-info.state.${textForState.toString().toLowerCase()}`)}\n</p>\n","<script lang=\"ts\">\n  import type { CompatibilityInput } from '$lib/generated';\n  import { CompatibilityState } from '$lib/generated';\n\n  export let compatibility: CompatibilityInput = null;\n  export let EXP = false;\n  let iconText = 'rocket_launch';\n  if (EXP) {\n    iconText = 'science';\n  }\n</script>\n\n<p\n  class=\"material-icons text-sm\"\n  class:mod-state-works={compatibility?.state === CompatibilityState.Works}\n  class:mod-state-damaged={compatibility?.state === CompatibilityState.Damaged}\n  class:mod-state-broken={compatibility?.state === CompatibilityState.Broken}\n  class:mod-state-unknown={!compatibility}>\n  {iconText}\n</p>\n","<script lang=\"ts\">\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import CompatibilityStateText from '$lib/components/mods/compatibility/CompatibilityStateText.svelte';\n  import { markdown } from '../../../utils/markdown';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export let compatibility: CompatibilityInfoInput;\n\n  export const { t } = getTranslate();\n  export const compatibilityStateDescriptions: {\n    [key: string]: string;\n  } = {\n    Works: $t('compatibility-info.state.works.description'),\n    Damaged: $t('compatibility-info.state.damaged.description'),\n    Broken: $t('compatibility-info.state.broken.description'),\n    Unknown: $t('compatibility-info.state.unknown.description')\n  };\n</script>\n\n<div>\n  {$t('compatibility-info.maintained-by')}\n  <a href=\"https://discord.gg/xkVJ73E\" style=\"text-decoration: underline\">{$t('discord')}</a>!\n</div>\n<br />\n{#if compatibility}\n  <div>{$t('early-access')}: <CompatibilityStateText state={compatibility?.EA?.state} /></div>\n  <div class=\"compatibility-state-description\">\n    {compatibilityStateDescriptions[compatibility?.EA?.state || 'Unknown']}\n  </div>\n  {#if compatibility.EA.note}\n    <div>\n      {$t('compatibility-info.note')}: {#await markdown(compatibility.EA.note) then rendered}\n        <!-- eslint-disable -->\n        {@html rendered}\n      {/await}\n    </div>\n  {/if}\n  <br />\n  <div>{$t('experimental')}: <CompatibilityStateText state={compatibility?.EXP?.state} /></div>\n  <div class=\"compatibility-state-description\">\n    {compatibilityStateDescriptions[compatibility?.EXP?.state || 'Unknown']}\n  </div>\n  {#if compatibility.EXP.note}\n    <div>\n      {$t('compatibility-info.note')}: {#await markdown(compatibility.EXP.note) then rendered}\n        <!-- eslint-disable -->\n        {@html rendered}\n      {/await}\n    </div>\n  {/if}\n{:else}\n  <div>\n    {compatibilityStateDescriptions.Unknown}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import CompatibilityInfo from '$lib/components/mods/compatibility/CompatibilityInfo.svelte';\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export let compatibility: CompatibilityInfoInput;\n\n  export const { t } = getTranslate();\n</script>\n\n<div class=\"card flex flex-col gap-2 p-4\">\n  <h2 class=\"text-2xl\">{$t('compatibility-info')}</h2>\n  <div>\n    <CompatibilityInfo {compatibility} />\n  </div>\n</div>\n"],"names":["ctx","CompatibilityState","Damaged","Broken","insert_hydration","target","div","anchor","create_if_block","compatibility","$$props","logo","Worst","input","EA","state","Works","EXP","worst","works","t_1_value","toString","toLowerCase","attr","p","dirty","set_data","t_1","t","getTranslate","textForState","classForState","s","toggle_class","iconText","Unknown","t0_value","t3_value","t7_value","t10_value","note","create_if_block_2","create_if_block_1","div0","div1","br","div2","div3","current","t0","t3","t7","t10","handle_promise","promise","markdown","info","html_tag","raw_value","t2_value","append_hydration","a","t2","compatibilityStateDescriptions","$t","h2"],"mappings":"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"}