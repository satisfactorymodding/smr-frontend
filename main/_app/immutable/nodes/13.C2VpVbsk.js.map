{"version":3,"file":"13.C2VpVbsk.js","sources":["../../../../../../src/routes/guide/[guideId]/edit/+page.ts","../../../../../../src/routes/guide/[guideId]/edit/+page.svelte"],"sourcesContent":["import type { PageLoad } from './$types';\n\nexport const load: PageLoad = async ({ params }) => ({\n  ...params\n});\n","<script lang=\"ts\">\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { EditGuideDocument, GetGuideDocument } from '$lib/generated';\n  import { goto } from '$app/navigation';\n  import GuideForm from '$lib/components/guides/GuideForm.svelte';\n  import type { GuideData } from '$lib/models/guides';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import type { PageData } from './$types';\n  import { getModalStore, getToastStore, type ModalSettings } from '@skeletonlabs/skeleton';\n\n  export let data: PageData;\n\n  $: ({ guideId } = data);\n\n  const client = getContextClient();\n\n  const toastStore = getToastStore();\n\n  $: guide = queryStore({\n    query: GetGuideDocument,\n    client,\n    variables: { guide: guideId }\n  });\n\n  const onSubmit = (guideData: GuideData) => {\n    client\n      .mutation(EditGuideDocument, {\n        guideId: guideId,\n        guide: guideData\n      })\n      .toPromise()\n      .then((value) => {\n        if (value.error) {\n          console.error(value.error.message);\n          toastStore.trigger({\n            message: 'Error editing guide: ' + value.error.message,\n            background: 'variant-filled-error',\n            autohide: false\n          });\n        } else {\n          toastStore.trigger({\n            message: `Guide updated`,\n            background: 'variant-filled-success',\n            timeout: 5000\n          });\n          goto(base + '/guide/' + value.data.updateGuide.id);\n        }\n      });\n  };\n\n  const goBackFn = () => {\n    goto(base + '/guide/' + guideId);\n  };\n\n  const backModal: ModalSettings = {\n    type: 'confirm',\n    title: 'Go Back?',\n    buttonTextCancel: 'Keep Editing',\n    buttonTextConfirm: 'Go Back',\n    body: 'Going back will discard any unsaved changes. Are you sure you wish to continue?',\n    response: (r: boolean) => {\n      if (r) {\n        goBackFn();\n      }\n    }\n  };\n\n  const modalStore = getModalStore();\n</script>\n\n<svelte:head>\n  {#if !$guide.fetching && !$guide.error && $guide.data.getGuide}\n    <MetaDescriptors\n      description=\"Editing guide '{$guide.data.getGuide.short_description}'\"\n      title=\"Edit guide '{$guide.data.getGuide.name}'\" />\n  {/if}\n</svelte:head>\n\n<div class=\"flex h-auto flex-wrap items-center justify-between\">\n  <h1 class=\"my-4 text-4xl font-bold\">Edit Guide</h1>\n  <div>\n    <button class=\"variant-ghost-primary btn\" on:click={() => modalStore.trigger(backModal)}>\n      <span class=\"material-icons pr-2\">arrow_back</span>\n      Back to Guide</button>\n  </div>\n</div>\n\n<div class=\"card p-4\">\n  <section>\n    {#if $guide.fetching}\n      <p>Loading...</p>\n    {:else if $guide.error}\n      <p>Oh no... {$guide.error.message}</p>\n    {:else}\n      <GuideForm {onSubmit} initialValues={$guide.data.getGuide} submitText=\"Save\" submitIcon=\"save\" />\n    {/if}\n  </section>\n</div>\n"],"names":["load","async","params","description","ctx","data","getGuide","short_description","title","name","dirty","metadescriptors_changes","error","message","insert_hydration","target","p","anchor","set_data","t1","t1_value","fetching","create_if_block_2","div1","append_hydration","h1","div0","button","div2","section","$$props","client","getContextClient","toastStore","getToastStore","onSubmit","guideData","mutation","EditGuideDocument","guideId","guide","toPromise","then","value","console","trigger","background","autohide","timeout","goto","base","updateGuide","id","goBackFn","backModal","type","buttonTextCancel","buttonTextConfirm","body","response","r","modalStore","getModalStore","$$invalidate","$$subscribe_guide","queryStore","query","GetGuideDocument","variables"],"mappings":"odAEO,MAAMA,GAAiBC,MAASC,CAAAA,OAAAA,CAAAA,KAAc,CAChDA,GAAAA,CAAAA,uJCuE8BC,YAAA,kBAAAC,EAAO,CAAAC,EAAAA,KAAKC,SAASC,kBAAiB,IAC/CC,MAAA,eAAAJ,EAAO,GAAAC,KAAKC,SAASG,KAAI,GAAA,CAAA,CAAA,0FADhBC,EAAA,IAAAC,EAAAR,YAAA,kBAAAC,EAAO,CAAA,EAAAC,KAAKC,SAASC,kBAAiB,KAC/CG,EAAA,IAAAC,EAAAH,MAAA,eAAAJ,EAAO,CAAA,EAAAC,KAAKC,SAASG,KAAI,0KAoBRL,EAAM,GAACC,KAAKC,8JAAZF,EAAM,CAACC,EAAAA,KAAKC,6HAFpCF,EAAM,CAAA,EAACQ,MAAMC,QAAO,6BAA9B,yDAAA,2CAAHC,EAAqCC,EAAAC,EAAAC,qCAAxBb,EAAM,CAAA,EAACQ,MAAMC,QAAO,KAAAK,GAAAC,EAAAC,CAAAA,0LAFjCN,EAAgBC,EAAAC,EAAAC,CAAAA;wCAnBdb,EAAM,CAACiB,EAAAA,UAAAA,CAAajB,EAAM,CAAA,EAACQ,OAASR,EAAM,CAAA,EAACC,KAAKC,UAAQgB,EAAAlB,0CAkBvD,CAAA,OAAAA,KAAOiB,SAAQ,EAEVjB,GAAOQ,EAAAA,MAAK,y3BAb1BE,EAAAA,EAOKC,EAAAQ,EAAAN,CANHO,EAAAA,EAAkDD,EAAAE,CAAAA,SAClDD,EAIKD,EAAAG,GAHHF,EAEuBE,EAAAC,YAI3Bb,EAUKC,EAAAa,EAAAX,CAAAA,EATHO,EAQSI,EAAAC,iEAzBHzB,EAAM,CAAA,EAACiB,WAAajB,EAAM,CAAA,EAACQ,OAASR,EAAM,CAACC,EAAAA,KAAKC,6cA7D3CD,GAAcyB,EAInB,MAAAC,EAASC,GAAAA,EAETC,EAAaC,GAAAA,EAQbC,EAAYC,GAChBL,CAAAA,EACGM,SAASC,GAAiB,CAChBC,QACTC,EAAAA,MAAOJ,CAERK,CAAAA,EAAAA,UAAAA,EACAC,KAAMC,GACD,CAAAA,EAAM/B,OACRgC,QAAQhC,MAAM+B,EAAM/B,MAAMC,OAC1BoB,EAAAA,EAAWY,QAAO,CAChBhC,QAAS,wBAA0B8B,EAAM/B,MAAMC,QAC/CiC,WAAY,uBACZC,SAAU,EAAA,CAAA,IAGZd,EAAWY,QAAO,CAChBhC,QAAO,gBACPiC,WAAY,yBACZE,QAAS,GAEXC,CAAAA,EAAAA,EAAKC,EAAO,UAAYP,EAAMtC,KAAK8C,YAAYC,QAKjDC,EAAQ,IACZJ,CAAAA,EAAKC,EAAO,UAAYX,CAAO,CAAA,EAG3Be,EAAS,CACbC,KAAM,UACN/C,MAAO,WACPgD,iBAAkB,eAClBC,kBAAmB,UACnBC,KAAM,kFACNC,SAAWC,GAAAA,CACLA,GACFP,EAAAA,IAKAQ,EAAaC,WAcyCD,EAAWhB,QAAQS,CAAAA,gFArE9ES,EAAA,EAAKxB,CAAAA,QAAAA,CAAAA,EAAYlC,EAAIkC,CAAAA,iBAMrByB,EAAAD,EAAA,EAAEvB,EAAQyB,GAAU,CACnBC,MAAOC,GACPpC,OACAqC,EAAAA,UAAS,CAAI5B,MAAOD"}