{"version":3,"file":"8.-3obtbkM.js","sources":["../../../../../../src/routes/admin/unapproved-versions/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { ApproveVersionDocument, DenyVersionDocument, GetUnapprovedVersionsDocument } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { API_REST } from '$lib/core';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import { prettyDate } from '$lib/utils/formatting';\n  import { type PaginationSettings, Paginator } from '@skeletonlabs/skeleton';\n\n  const client = getContextClient();\n\n  let perPage = 20;\n  let page = 1;\n\n  $: versions = queryStore({\n    query: GetUnapprovedVersionsDocument,\n    client,\n    variables: {\n      filter: {\n        offset: (page - 1) * perPage,\n        limit: perPage\n      }\n    }\n  });\n\n  $: totalVersions = $versions?.data?.getUnapprovedVersions?.count;\n\n  const approveVersion = (versionId: string) => {\n    client\n      .mutation(ApproveVersionDocument, { versionId })\n      .toPromise()\n      .then(() => {\n        versions.pause();\n        versions.resume();\n      });\n  };\n\n  const denyVersion = (versionId: string) => {\n    client\n      .mutation(DenyVersionDocument, { versionId })\n      .toPromise()\n      .then(() => {\n        versions.pause();\n        versions.resume();\n      });\n  };\n\n  $: paginationSettings = {\n    page: page,\n    limit: perPage,\n    size: totalVersions,\n    amounts: [5, 10, 20, 50, 100]\n  } satisfies PaginationSettings;\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Unapproved mod versions\" title=\"Admin: Unapproved Versions\" />\n</svelte:head>\n\n<h1>Unapproved Versions</h1>\n\n{#if totalVersions}\n  <div class=\"mb-5 ml-auto flex justify-end\">\n    <div>\n      <Paginator\n        bind:settings={paginationSettings}\n        showFirstLastButtons={true}\n        showPreviousNextButtons={true}\n        on:page={(p) => (page = p.detail)}\n        on:amount={(p) => (perPage = p.detail)}\n        controlVariant=\"variant-filled-surface\" />\n    </div>\n  </div>\n{/if}\n\n<div class=\"card\">\n  {#if $versions.fetching}\n    <section class=\"p-4\">Loading...</section>\n  {:else if $versions.error}\n    <section class=\"p-4\">Oh no... {$versions.error.message}</section>\n  {:else}\n    <table class=\"table table-hover max-w-full\">\n      <thead>\n        <tr>\n          <th>Mod</th>\n          <th>Version</th>\n          <th>Release Date</th>\n          <th><!-- Buttons --></th>\n        </tr>\n      </thead>\n      <tbody>\n        {#each $versions.data.getUnapprovedVersions.versions as version}\n          <tr>\n            <td>{version.mod.name}</td>\n            <td>{version.version}</td>\n            <td>{prettyDate(version.created_at)}</td>\n            <td class=\"!p-2.5\">\n              <div class=\"grid grid-flow-col gap-4\">\n                <button class=\"variant-ghost-primary btn\" on:click={() => approveVersion(version.id)}>Approve</button>\n                <button class=\"variant-ghost-primary btn\" on:click={() => denyVersion(version.id)}>Deny</button>\n                <a\n                  class=\"variant-ghost-primary btn\"\n                  href={API_REST + '/mod/' + version.mod_id + '/versions/' + version.id + '/download'}>\n                  Download\n                </a>\n                <a class=\"variant-ghost-primary btn\" href={base + '/mod/' + version.mod_id + '/version/' + version.id}>\n                  View\n                </a>\n              </div>\n            </td>\n          </tr>\n        {/each}\n      </tbody>\n    </table>\n  {/if}\n</div>\n\n{#if totalVersions}\n  <div class=\"ml-auto mt-5 flex justify-end\">\n    <Paginator\n      bind:settings={paginationSettings}\n      showFirstLastButtons={true}\n      showPreviousNextButtons={true}\n      on:page={(p) => (page = p.detail)}\n      on:amount={(p) => (perPage = p.detail)}\n      controlVariant=\"variant-filled-surface\" />\n  </div>\n{/if}\n\n<style lang=\"postcss\">\n  h1 {\n    @apply my-4 text-4xl font-bold;\n  }\n</style>\n"],"names":["ctx","insert_hydration","target","div1","anchor","append_hydration","div0","each_value","ensure_array_like","data","getUnapprovedVersions","versions","length","i","table","thead","tbody","error","message","section","set_data","t1","t1_value","mod","name","t2_value","version","prettyDate","created_at","attr","a0","a0_href_value","API_REST","mod_id","id","base","tr","td0","td1","td2","td3","div","button0","button1","a1","t0","t0_value","dirty","t2","t4","t4_value","create_if_block_3","fetching","create_if_block_1","create_if_block_2","create_if_block","h1","client","getContextClient","perPage","page","approveVersion","versionId","mutation","ApproveVersionDocument","toPromise","then","pause","resume","denyVersion","DenyVersionDocument","paginationSettings","value","page_handler","p","$$invalidate","detail","amount_handler","page_handler_1","amount_handler_1","$$subscribe_versions","queryStore","query","GetUnapprovedVersionsDocument","variables","filter","offset","limit","totalVersions","$versions","count","size","amounts"],"mappings":"guBAkE8B,2BACG,mDAFVA,EAAkB,CAAA,IAAA,oBAAlBA,EAAkB,yUAHvCC,CAAAA,EAUKC,EAAAC,EAAAC,GATHC,EAQKF,EAAAG,kEANcN,EAAkB,uNA0B1BO,EAAAC,GAAAR,EAAU,CAAAS,EAAAA,KAAKC,sBAAsBC,+BAA1CC,OAAIC,GAAA,saAVVZ,EAgCOC,EAAAY,EAAAV,CAAAA,EA/BLC,EAOOS,EAAAC,QACPV,EAAAA,EAsBOS,EAAAE,CAAAA,qEArBET,EAAAC,GAAAR,EAAU,CAAAS,EAAAA,KAAKC,sBAAsBC,QAAAA,oBAA1CC,OAAIC,GAAA,EAAA,mHAAJD,yDAZyBZ,EAAS,CAAA,EAACiB,MAAMC,QAAO,mCAAjC,WAAA,qEAAA,WAAA,gEAArBjB,CAAAA,EAAgEC,EAAAiB,EAAAf,qCAAjCJ,EAAS,CAAA,EAACiB,MAAMC,QAAO,KAAAE,EAAAC,EAAAC,kPAFtDrB,CAAAA,EAAwCC,EAAAiB,EAAAf,iDAgB3BJ,EAAO,EAAA,EAACuB,IAAIC,KAAI,SAChBC,EAAAzB,MAAQ0B,QAAO,WACfC,GAAW3B,EAAO,EAAC4B,EAAAA,UAAAA,EAAU,oUAOwD,UAAA,qBAGgB,2hBAHhB,UAAA,wEAGgB,8MAH9FC,EAAAC,EAAA,OAAAC,EAAAC,GAAW,QAAUhC,EAAQ,EAAAiC,EAAAA,OAAS,aAAejC,EAAQ,IAAAkC,GAAK,WAAA,wDAG/BC,GAAO,QAAUnC,EAAO,EAAA,EAACiC,OAAS,YAAcjC,EAAO,EAACkC,EAAAA,EAAAA,wEAbzGjC,EAkBIC,EAAAkC,EAAAhC,CAjBFC,EAAAA,EAA0B+B,EAAAC,CAAAA,gBAC1BhC,EAAyB+B,EAAAE,iBACzBjC,EAAwC+B,EAAAG,iBACxClC,EAaI+B,EAAAI,CAZFnC,EAAAA,EAWKmC,EAAAC,CAAAA,EAVHpC,EAAqGoC,EAAAC,CAAAA,OACrGrC,EAAAA,EAA+FoC,EAAAE,CAAAA,OAC/FtC,EAAAA,EAIGoC,EAAAX,CAAAA,cACHzB,EAAAA,EAEGoC,EAAAG,CAAAA,wFAdF5C,EAAO,EAAA,EAACuB,IAAIC,KAAI,KAAAJ,EAAAyB,EAAAC,CAChB,EAAAC,EAAA,GAAAtB,KAAAA,EAAAzB,IAAQ0B,EAAAA,QAAO,KAAAN,EAAA4B,EAAAvB,CAAAA,cACfE,GAAW3B,EAAO,EAAA,EAAC4B,UAAU,EAAA,KAAAR,EAAA6B,EAAAC,CAAAA,EAOtBH,EAAA,GAAAhB,KAAAA,EAAAC,GAAW,QAAUhC,EAAQ,EAAA,EAAAiC,OAAS,aAAejC,EAAQ,EAAA,EAAAkC,GAAK,wCAG/BC,GAAO,QAAUnC,EAAO,EAAA,EAACiC,OAAS,YAAcjC,EAAO,EAACkC,EAAAA,4HAgBvF,2BACG,mDAFVlC,EAAkB,CAAA,IAAA,oBAAlBA,EAAkB,wRAFrCC,EAQKC,EAAAuC,EAAArC,CAAAA,iEANcJ,EAAkB,iRA3DlCA,EAAa,CAAA,GAAAmD,GAAAnD,CAAAA,kBAeX,OAAAA,KAAUoD,SAAQC,GAEbrD,KAAUiB,MAAKqC,0BAuCtBtD,EAAa,CAAA,GAAAuD,GAAAvD,ggBA1DlBC,EAA2BC,EAAAsD,EAAApD,CAAAA,gCAgB3BH,EAwCKC,EAAAuC,EAAArC,CAAAA,2DAtDAJ,EAAa,CAAA,2KAwDbA,EAAa,CAAA,gXA5GV,CAAA,EAAA,MAAAyD,EAASC,GAAAA,EAEX,IAAAC,EAAU,GACVC,EAAO,EAeL,MAAAC,EAAkBC,GAAAA,CACtBL,EACGM,SAASC,GAAsB,CAAIF,cACnCG,UACAC,EAAAA,KAAI,IACHvD,CAAAA,EAASwD,MACTxD,EAAAA,EAASyD,OAAM,CAAA,CAAA,GAIfC,EAAeP,GAAAA,CACnBL,EACGM,SAASO,GAAmB,CAAIR,cAChCG,UACAC,EAAAA,KAAI,IACHvD,CAAAA,EAASwD,MACTxD,EAAAA,EAASyD,OAAM,CAAA,CAAA,gBAsBAG,CAAAA,EAAkBC,qCAGvB,MAAAC,EAAAC,GAAOC,EAAA,EAAAf,EAAOc,EAAEE,MAAAA,EACdC,EAAAH,GAAOC,EAAA,EAAAhB,EAAUe,EAAEE,aA6BmCf,EAAenC,EAAQQ,SACvBmC,EAAY3C,EAAQQ,EAAAA,eAqBzEqC,CAAAA,EAAkBC,qCAGvB,MAAAM,EAAAJ,GAAOC,EAAA,EAAAf,EAAOc,EAAEE,MACd,EAAAG,EAAAL,GAAOC,EAAA,EAAAhB,EAAUe,EAAEE,MAAAA,wCA9GlCI,EAAAL,EAAA,EAAEhE,EAAWsE,GAAU,CACtBC,MAAOC,GACP1B,OACA2B,EAAAA,UAAS,CACPC,OAAM,CACJC,QAAS1B,EAAO,GAAKD,EACrB4B,MAAO5B,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,gBAKZgB,EAAA,EAAEa,EAAgBC,GAAWhF,MAAMC,uBAAuBgF,yBAsBxDnB,EAAkB,CACbX,KAAAA,EACN2B,MAAO5B,EACPgC,KAAMH,EACNI,QAAO,CAAG,EAAG,GAAI,GAAI,GAAI"}