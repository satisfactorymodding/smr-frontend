{"version":3,"file":"26.CNgjDGud.js","sources":["../../../../../../src/routes/settings/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { getContextClient } from '@urql/svelte';\n  import { UpdateUserDocument } from '$lib/generated';\n  import { goto } from '$app/navigation';\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { reporter, ValidationMessage } from '@felte/reporter-svelte';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { user } from '$lib/stores/user';\n  import * as zod from 'zod';\n  import type { Form } from '@felte/core';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import type { Writable } from 'svelte/store';\n  import { getToastStore } from '@skeletonlabs/skeleton';\n\n  const toastStore = getToastStore();\n\n  const client = getContextClient();\n\n  export const userSchema = zod.object({\n    avatar: zod.optional(zod.any().refine((logo) => 'name' in logo && 'size' in logo && 'type' in logo)),\n    username: zod.string().min(3).max(32)\n  });\n\n  let form: Form<{ [key: string]: string }>['form'];\n  let data: Writable<{ username: string }>;\n\n  $: {\n    if ($user && !data) {\n      const createdForm = createForm<{ username: string }>({\n        initialValues: {\n          username: $user.username\n        },\n        extend: [validator({ schema: userSchema }), reporter],\n        onSubmit: (submitted: { username: string; avatar: unknown }) => {\n          console.log('submitted', submitted);\n          client\n            .mutation(UpdateUserDocument, {\n              user: trimNonSchema(submitted, userSchema),\n              userId: $user.id\n            })\n            .toPromise()\n            .then((value) => {\n              if (value.error) {\n                console.error(value.error.message);\n                toastStore.trigger({\n                  message: 'Error editing user: ' + value.error.message,\n                  background: 'variant-filled-error',\n                  autohide: false\n                });\n              } else {\n                toastStore.trigger({\n                  message: `User updated`,\n                  background: 'variant-filled-success',\n                  timeout: 5000\n                });\n                goto(base + '/user/' + value.data.updateUser.id);\n              }\n            });\n        }\n      });\n\n      form = createdForm.form;\n      data = createdForm.data;\n    }\n  }\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Change your user settings\" title=\"Settings\" />\n</svelte:head>\n\n<h1 class=\"my-4 text-4xl font-bold\">Settings</h1>\n\n<div class=\"card p-4\">\n  <section>\n    {#if $user === null}\n      <p>Please log in</p>\n    {:else}\n      <form use:form>\n        <div class=\"grid grid-flow-row gap-6\">\n          <div class=\"grid grid-flow-row gap-2\">\n            <label for=\"avatar\">Avatar:</label>\n            <input\n              id=\"avatar\"\n              class=\"base-input\"\n              name=\"avatar\"\n              type=\"file\"\n              accept=\"image/png,image/jpeg,image/gif\"\n              placeholder=\"Avatar\" />\n            <ValidationMessage for=\"avatar\" let:messages={message}>\n              <span class=\"validation-message\">{message || ''}</span>\n            </ValidationMessage>\n          </div>\n\n          <div class=\"grid grid-flow-row gap-2\">\n            <label class=\"label\">\n              <span>Username</span>\n              <input type=\"text\" bind:value={$data.username} required class=\"input p-2\" />\n            </label>\n            <ValidationMessage for=\"username\" let:messages={message}>\n              <span class=\"validation-message\">{message || ''}</span>\n            </ValidationMessage>\n          </div>\n\n          <div>\n            <button class=\"variant-ghost-primary btn\" type=\"submit\">Save</button>\n          </div>\n        </div>\n      </form>\n    {/if}\n  </section>\n</div>\n"],"names":["message","insert_hydration","target","form_1","anchor","append_hydration","div3","div0","label0","input0","div1","label1","span","input1","set_input_value","ctx","username","div2","dirty","value","p","t_value","set_data","t","h1","div","section","toastStore","getToastStore","client","getContextClient","userSchema","zod.object","avatar","zod.optional","zod.any","refine","logo","zod.string","min","max","form","data","$data","this","$user","createdForm","createForm","initialValues","extend","validator","schema","reporter","onSubmit","submitted","console","log","mutation","UpdateUserDocument","user","trimNonSchema","userId","id","toPromise","then","error","trigger","background","autohide","timeout","goto","base","updateUser"],"mappings":"+0BA2F0DA,CAAAA,KAAO,CAAA,EAAAA,CAAAA,cAAPA,CAAAA,IAAOA,EAAA,IAAA,CAAA,CAAA,oFAULA,CAAO,KAAA,CAAA,EAAAA,eAAPA,CAAOA,IAAAA,EAAA,IAAA,CAAA,CAAA,0zCArB7DC,EA8BMC,EAAAC,EAAAC,CA7BJC,EAAAA,EA4BKF,EAAAG,CA3BHD,EAAAA,EAYKC,EAAAC,CAXHF,EAAAA,EAAkCE,EAAAC,CAAAA,SAClCH,EAMwBE,EAAAE,CAAAA,4BAM1BJ,EAQKC,EAAAI,GAPHL,EAGOK,EAAAC,CAFLN,EAAAA,EAAoBM,EAAAC,QACpBP,EAAAA,EAA2EM,EAAAE,CAA5CC,EAAAA,EAAAD,EAAAE,KAAMC,oCAOzCX,EAEKC,EAAAW,CAAAA,8HAT8BC,EAAA,GAAAL,EAAAM,QAAAJ,GAAMC,EAAAA,UAANF,EAAAD,EAAAE,GAAMC,EAAAA,QAAAA,0WArB7Cf,EAAmBC,EAAAkB,EAAAhB,oDAcuBiB,GAAAN,MAAW,IAAE,oKAA/Cd,EAAsDC,EAAAU,EAAAR,kBAApBc,EAAA,KAAAG,KAAAA,GAAAN,MAAW,IAAE,KAAAO,EAAAC,EAAAF,wCAUbA,GAAAN,MAAW,IAAE,oKAA/Cd,EAAsDC,EAAAU,EAAAR,kBAApBc,EAAA,KAAAG,KAAAA,GAAAN,GAAW,GAAA,IAAE,KAAAO,EAAAC,EAAAF,uLAzBpD,OAAAN,OAAU,KAAI,mhBAJvBd,EAAgDC,EAAAsB,EAAApB,YAEhDH,EAsCKC,EAAAuB,EAAArB,CArCHC,EAAAA,EAoCSoB,EAAAC,oZAhGH,MAAAC,EAAaC,GAAAA,EAEbC,EAASC,GAAAA,EAEFC,EAAaC,GAAU,CAClCC,OAAQC,GAAaC,KAAUC,OAAQC,GAAS,SAAUA,GAAQ,SAAUA,GAAQ,SAAUA,CAAAA,CAAAA,EAC9FrB,SAAUsB,GAAAA,EAAaC,IAAI,CAAGC,EAAAA,IAAI,UAGhCC,EACAC,eAyEuCC,EAAM3B,SAAQ4B,KAAAzB,wDAtEnD0B,GAAUH,CAAAA,EAAI,CACV,MAAAI,EAAcC,GAAU,CAC5BC,cACE,CAAAhC,SAAU6B,EAAM7B,UAElBiC,QAASC,GAAS,CAAGC,OAAQpB,CAAeqB,CAAAA,EAAAA,EAAAA,EAC5CC,SAAWC,GACTC,CAAAA,QAAQC,IAAI,YAAaF,CAAAA,EACzBzB,EACG4B,SAASC,GAAkB,CAC1BC,KAAMC,GAAcN,EAAWvB,CAC/B8B,EAAAA,OAAQhB,EAAMiB,EAEfC,CAAAA,EAAAA,UAAAA,EACAC,KAAM7C,GAAAA,CACDA,EAAM8C,OACRV,QAAQU,MAAM9C,EAAM8C,MAAMjE,OAAAA,EAC1B2B,EAAWuC,QAAO,CAChBlE,QAAS,uBAAyBmB,EAAM8C,MAAMjE,QAC9CmE,WAAY,uBACZC,SAAU,EAAA,CAAA,IAGZzC,EAAWuC,QAAO,CAChBlE,QAAO,eACPmE,WAAY,yBACZE,QAAS,GAAA,CAAA,EAEXC,GAAKC,GAAO,SAAWpD,EAAMuB,KAAK8B,WAAWV,cAMvDrB,EAAOK,EAAYL,IAAAA,QACnBC,EAAOI,EAAYJ,IAAAA,CAAAA"}