{"version":3,"file":"6.C_XX9cnq.js","sources":["../../../../../../src/routes/admin/tag-manager/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { CreateTagDocument, DeleteTagDocument, GetTagsDocument, UpdateTagDocument } from '$lib/generated';\n  import type { Tag } from '$lib/generated';\n  import { Accordion, AccordionItem, getToastStore } from '@skeletonlabs/skeleton';\n\n  const client = getContextClient();\n\n  let tags: Tag[] = [];\n  const panels = {};\n  const nameFields = {};\n  let tagNegativeID = -1;\n  const defaultNewTagName = 'New Tag';\n\n  const tagsQuery = queryStore({\n    query: GetTagsDocument,\n    client,\n    variables: {\n      limit: 100\n    }\n  });\n\n  $: tags = $tagsQuery.data?.getTags || [];\n\n  const toastStore = getToastStore();\n\n  function newTag() {\n    if (!tags.find((tag) => tag.name == defaultNewTagName)) {\n      const tag = { id: tagNegativeID--, name: defaultNewTagName, description: 'Description' } as Tag;\n      tags.push(tag);\n      tags = tags;\n      setTimeout(() => {\n        panels[tag.id].setOpen(true);\n        const field = nameFields[tag.id];\n        field.focus();\n        const input = field.getElement().querySelectorAll('input')[0] as HTMLInputElement;\n        input.select();\n      }, 0);\n    } else {\n      panels[tags[tags.length - 1].id].setOpen(true);\n      nameFields[tags[tags.length - 1].id].focus();\n    }\n  }\n\n  async function tagChange(tag: Tag) {\n    if (tag.name == defaultNewTagName) {\n      return;\n    }\n\n    let success = false;\n    if (tag.id < 0) {\n      // Create new tag & update tag.id with new DB id or re-fetch all tags\n      try {\n        const result = await client\n          .mutation(CreateTagDocument, { tagName: tag.name, description: tag.description })\n          .toPromise();\n        if (result.data) {\n          tag.id = result.data.createTag.id;\n          success = true;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n      if (!success) {\n        toastStore.trigger({\n          message: `Failed to create Tag '${tag.name}'!`,\n          background: 'variant-filled-error',\n          timeout: 2000\n        });\n        return;\n      }\n    } else {\n      // Update existing tag\n      try {\n        success =\n          (\n            await client\n              .mutation(UpdateTagDocument, { tagID: tag.id, tagName: tag.name, description: tag.description })\n              .toPromise()\n          ).data.updateTag != null;\n      } catch {\n        // nothing\n      }\n      if (!success) {\n        toastStore.trigger({\n          message: `Failed to update Tag '${tag.name}'!`,\n          background: 'variant-filled-error',\n          timeout: 2000\n        });\n        return;\n      }\n    }\n\n    toastStore.trigger({\n      message: `Tag '${tag.name}' saved!`,\n      background: 'variant-filled-success',\n      timeout: 2000\n    });\n  }\n\n  async function deleteTag(tag: Tag) {\n    if (tag.name != defaultNewTagName) {\n      // Remove tag\n      let success = false;\n      try {\n        const result = await client.mutation(DeleteTagDocument, { tagID: tag.id }).toPromise();\n        success = result.data.deleteTag;\n      } catch {\n        success = false;\n      }\n      if (!success) {\n        toastStore.trigger({\n          message: `Failed to remove Tag '${tag.name}'!`,\n          background: 'variant-filled-error',\n          timeout: 2000\n        });\n        return;\n      }\n    } else {\n      tags.splice(tags.indexOf(tag), 1);\n    }\n\n    toastStore.trigger({\n      message: `Tag '${tag.name}' removed!`,\n      background: 'variant-filled-success',\n      timeout: 2000\n    });\n  }\n\n  function onDeleteClick(e: Event, tag: Tag) {\n    e.stopPropagation();\n    deleteTag(tag);\n  }\n</script>\n\n<h1>Mod Tag Manager</h1>\n\n<div class=\"card\">\n  {#if $tagsQuery.fetching}\n    <h1>Loading tags...</h1>\n  {:else if $tagsQuery.error}\n    <h1>Failed to load tags: {$tagsQuery.error.message}</h1>\n  {:else}\n    <Accordion>\n      {#each tags as tag}\n        <AccordionItem bind:this={panels[tag.id]}>\n          <svelte:fragment slot=\"summary\">{tag.name}</svelte:fragment>\n          <svelte:fragment slot=\"content\">\n            <div>\n              <div>Tag name</div>\n              <input\n                type=\"text\"\n                class=\"input p-2\"\n                bind:value={tag.name}\n                placeholder=\"Name\"\n                bind:this={nameFields[tag.id]}\n                on:change={() => tagChange(tag)} />\n              <div>Tag description</div>\n              <input\n                type=\"text\"\n                class=\"input p-2\"\n                bind:value={tag.description}\n                placeholder=\"Description\"\n                on:change={() => tagChange(tag)} />\n            </div>\n            <span slot=\"helper\">Human-Readable name and description of the tag that is shown in UI</span>\n\n            <button class=\"variant-ghost-error btn\" on:click={(e) => onDeleteClick(e, tag)}>\n              <span>Delete</span>\n            </button>\n          </svelte:fragment>\n        </AccordionItem>\n      {/each}\n    </Accordion>\n\n    <section class=\"p-4\">\n      <button class=\"variant-ghost-primary btn\" on:click={newTag}>\n        <span>Add new tag</span>\n        <span class=\"material-icons\">add</span>\n      </button>\n    </section>\n  {/if}\n</div>\n\n<style lang=\"postcss\">\n  h1 {\n    @apply my-4 text-4xl font-bold;\n  }\n</style>\n"],"names":["insert_hydration","target","section","anchor","append_hydration","button","ctx","error","message","h1","set_data","t1","t1_value","t_value","name","dirty","t","div2","div0","input0","set_input_value","div1","input1","description","span0","value","length","i","each_blocks","fetching","div","defaultNewTagName","client","getContextClient","tags","panels","nameFields","tagNegativeID","tagsQuery","queryStore","query","GetTagsDocument","variables","limit","toastStore","getToastStore","newTag","find","tag","id","setOpen","focus","push","setTimeout","field","getElement","querySelectorAll","select","async","tagChange","success","result","mutation","CreateTagDocument","tagName","toPromise","data","createTag","err","console","log","trigger","background","timeout","UpdateTagDocument","tagID","updateTag","deleteTag","DeleteTagDocument","splice","indexOf","onDeleteClick","e","stopPropagation","this","$$value","change_handler","change_handler_1","click_handler","$tagsQuery","getTags"],"mappings":"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"}