{"version":3,"file":"19.DWkCdxr8.js","sources":["../../../../../../src/routes/mod/[modId]/version/[versionId]/+page.ts","../../../../../../src/lib/components/versions/VersionDescription.svelte","../../../../../../src/lib/components/versions/VersionInfo.svelte","../../../../../../src/lib/components/versions/VirustotalResults.svelte","../../../../../../src/routes/mod/[modId]/version/[versionId]/+page.svelte"],"sourcesContent":["import type { PageLoad } from './$types';\nimport { queryStore } from '@urql/svelte';\nimport { GetModVersionDocument } from '$lib/generated';\nimport { loadWaitForNoFetch } from '$lib/utils/gql';\n\nexport const load: PageLoad = async ({ params, parent }) => ({\n  ...params,\n  ...(await loadWaitForNoFetch({\n    version: queryStore({\n      query: GetModVersionDocument,\n      client: (await parent()).client,\n      variables: { version: params.versionId }\n    })\n  }))\n});\n","<script lang=\"ts\">\n  import { AnnouncementImportance } from '$lib/generated';\n  import { markdown } from '$lib/utils/markdown';\n  import AnnouncementRow from '../announcements/AnnouncementRow.svelte';\n\n  export let changelog!: string;\n  export let approved: boolean;\n</script>\n\n<div>\n  {#if !approved}\n    <div class=\"p-4\">\n      <AnnouncementRow\n        importance={AnnouncementImportance.Warning}\n        message=\"This version has not yet been approved by the virus scanner and is hidden until this process is complete. If this message isn't gone in the next few minutes, ask for manual approval on the Discord.\" />\n    </div>\n  {/if}\n  <div class=\"card h-fit p-4\">\n    <section>\n      <div class=\"markdown-content break-words\">\n        {#await markdown(changelog) then changelogRendered}\n          <!-- eslint-disable -->\n          <p>{@html changelogRendered}</p>\n        {/await}\n      </div>\n    </section>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import type { Version } from '$lib/generated';\n  import { prettyBytes, prettyDate, prettyNumber } from '$lib/utils/formatting';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export let version!: Pick<Version, 'created_at' | 'game_version' | 'size' | 'downloads' | 'hash'>;\n\n  export const { t } = getTranslate();\n</script>\n\n<div class=\"card p-4\">\n  <section>\n    <div class=\"break-words text-lg\">\n      <h3 class=\"my-4 text-2xl font-bold\">Info</h3>\n      <span><strong>{$t('entry.created-at')}:</strong> {prettyDate(version.created_at)}</span><br />\n      <span><strong>{$t('downloads')}:</strong> {prettyNumber(version.downloads)}</span><br />\n      <span><strong>{$t('game-versions')}:</strong> {version.game_version}</span><br />\n      <span><strong>{$t('size')}:</strong> {prettyBytes(version.size)}</span><br />\n      <span><strong>{$t('hash')}:</strong> {version.hash}</span>\n    </div>\n  </section>\n</div>\n","<script lang=\"ts\">\n  import type { VirustotalResult } from '$lib/generated';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export let results!: Array<VirustotalResult>;\n  export const { t } = getTranslate();\n</script>\n\n<div class=\"grid grid-flow-row\">\n  <h3 class=\"my-4 text-2xl font-bold\">{$t('virustotal.table.title')}</h3>\n  <table aria-label={$t('virustotal.table.title')} class=\"max-w-auto table table-hover !overflow-visible\">\n    <tbody>\n      <tr class=\"rounded border !border-surface-500\">\n        <td style=\"width: 25%;\"\n          ><div title={$t('virustotal.table.file_name')}>\n            {$t('virustotal.table.file_name')}\n          </div></td>\n        <td style=\"width: 25%;\"\n          ><div class=\"text-center\" title={$t('virustotal.table.results')}>{$t('virustotal.table.results')}</div></td>\n        <td style=\"width: 25%;\"\n          ><div class=\"text-center\" title={$t('virustotal.table.safe')}>{$t('virustotal.table.safe')}</div></td>\n      </tr>\n      {#each results as result}\n        <tr class=\"rounded border !border-surface-500\">\n          <td>\n            <div>{result.file_name}</div>\n          </td>\n          <td>\n            <div class=\"text-center\">\n              <a\n                title={$t('version.virustotal.result')}\n                href={`https://www.virustotal.com/gui/file/${result.hash}`}\n                target=\"_blank\"\n                class=\"text-white\">\n                <span class=\"material-icons text-center\" style=\"width: 20px\" title={$t('version.virustotal.result')}>\n                  policy\n                </span>\n              </a>\n            </div>\n          </td>\n          <td\n            ><div class=\"text-center\">\n              <span\n                class=\"material-icons text-center\"\n                style=\"width: 20px\"\n                title={result.safe ? $t('version.virustotal.safe') : $t('version.virustotal.not_safe')}>\n                {result.safe ? 'checkmark' : 'cancel'}\n              </span>\n            </div>\n          </td>\n        </tr>\n      {/each}\n    </tbody>\n  </table>\n</div>\n","<script lang=\"ts\">\n  import { DeleteVersionDocument } from '$lib/generated';\n  import VersionDescription from '$lib/components/versions/VersionDescription.svelte';\n  import VersionInfo from '$lib/components/versions/VersionInfo.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import { API_REST } from '$lib/core';\n  import { goto } from '$app/navigation';\n  import { user } from '$lib/stores/user';\n  import { base } from '$app/paths';\n  import { installMod } from '$lib/stores/launcher';\n  import { prettyTarget } from '$lib/utils/formatting';\n  import VersionTargetSupportGrid from '$lib/components/versions/VersionTargetSupportGrid.svelte';\n  import VersionDependenciesGrid from '$lib/components/versions/VersionDependenciesGrid.svelte';\n  import { getContextClient } from '@urql/svelte';\n  import type { PageData } from './$types';\n  import { getModalStore, getToastStore, type ModalSettings, popup } from '@skeletonlabs/skeleton';\n  import Page404 from '$lib/components/general/Page404.svelte';\n  import { getTranslate } from '@tolgee/svelte';\n  import VirustotalResults from '$lib/components/versions/VirustotalResults.svelte';\n\n  export const { t } = getTranslate();\n\n  export let data: PageData;\n\n  const { modId, versionId, version } = data;\n\n  const client = getContextClient();\n\n  const toastStore = getToastStore();\n\n  $: canUserEdit =\n    $user?.roles?.deleteContent ||\n    $version?.data?.getVersion.mod?.authors?.findIndex((author) => author.user_id == $user?.id) >= 0;\n\n  const deleteVersionFn = () => {\n    client\n      .mutation(DeleteVersionDocument, { versionId })\n      .toPromise()\n      .then((value) => {\n        if (value.error) {\n          console.error(value.error.message);\n          toastStore.trigger({\n            message: 'Error deleting version: ' + value.error.message,\n            background: 'variant-filled-error',\n            autohide: false\n          });\n        } else {\n          toastStore.trigger({\n            message: `Version deleted`,\n            background: 'variant-filled-success',\n            timeout: 5000\n          });\n          goto(base + '/mod/' + modId);\n        }\n      });\n  };\n\n  const deleteModal: ModalSettings = {\n    type: 'confirm',\n    title: 'Delete Version?',\n    body: 'Are you sure you wish to delete this version?',\n    response: (r: boolean) => {\n      if (r) {\n        deleteVersionFn();\n      }\n    }\n  };\n\n  const modalStore = getModalStore();\n</script>\n\n<svelte:head>\n  {#if !$version.fetching && !$version.error && $version.data.getVersion}\n    <MetaDescriptors\n      description=\"Information for mod version {$version.data.getVersion.mod.name} {$version.data.getVersion.version}\"\n      title=\"Mod version {$version.data.getVersion.mod.name} {$version.data.getVersion.version}\" />\n  {/if}\n</svelte:head>\n\n{#if $version.fetching}\n  <p>Loading...</p>\n{:else if $version.error}\n  <p>Oh no... {$version.error.message}</p>\n{:else if $version.data.getVersion}\n  <div class=\"grid gap-6 xlx:grid-flow-row\">\n    <div class=\"flex h-auto flex-wrap items-center justify-between\">\n      <h1 class=\"text-4xl font-bold\">\n        {$version.data.getVersion.mod.name}\n        Version {$version.data.getVersion.version}\n      </h1>\n\n      <div class=\"grid grid-flow-col gap-4\">\n        {#if canUserEdit}\n          <button\n            class=\"variant-ghost-primary btn\"\n            on:click={() => goto(base + '/mod/' + modId + '/version/' + versionId + '/edit')}>\n            <span class=\"material-icons pr-2\">edit_document</span>\n            Edit\n          </button>\n          <button class=\"variant-ghost-primary btn\" on:click={() => modalStore.trigger(deleteModal)}>\n            <span class=\"material-icons pr-2\">delete</span>\n            Delete</button>\n        {/if}\n        {#if $version.data.getVersion.targets.length != 0}\n          <button\n            class=\"variant-ghost-primary btn\"\n            title=\"Download a specific release target of this mod\"\n            use:popup={{\n              event: 'focus-click',\n              target: 'versionArchDropdown',\n              placement: 'bottom',\n              closeQuery: 'a'\n            }}>\n            <span>Download...</span>\n            <span class=\"material-icons\" style=\"margin: 0;\">arrow_drop_down</span>\n          </button>\n\n          <div class=\"card z-10 w-72 shadow-xl\" data-popup=\"versionArchDropdown\">\n            <nav class=\"list-nav\">\n              <ul>\n                {#each $version.data.getVersion.targets as target}\n                  <li>\n                    <a\n                      class=\"w-full\"\n                      href={API_REST +\n                        '/mod/' +\n                        modId +\n                        '/versions/' +\n                        versionId +\n                        '/' +\n                        target.targetName +\n                        '/download'}>\n                      <span>Download {prettyTarget(target.targetName)}</span>\n                    </a>\n                  </li>\n                {/each}\n              </ul>\n            </nav>\n          </div>\n        {:else}\n          <a class=\"variant-ghost-primary btn\" href={base + '/mod/' + modId + '/version/' + versionId}>View</a>\n          <a\n            class=\"variant-ghost-primary btn\"\n            href={API_REST + '/mod/' + modId + '/versions/' + versionId + '/download'}>Download</a>\n        {/if}\n        <button\n          class=\"variant-ghost-primary btn\"\n          title=\"Install via Satisfactory Mod Manager\"\n          on:click={() => installMod($version.data.getVersion.mod.mod_reference)}>\n          <span class=\"material-icons\">download</span>\n          <span>Install</span>\n        </button>\n        <a\n          class=\"variant-ghost-primary btn\"\n          href={base + '/mod/' + modId}\n          title=\"View the description page for this mod\">\n          <span class=\"material-icons\">extension</span>\n          <span>{$t('version.back')}</span>\n        </a>\n      </div>\n    </div>\n    <div class=\"grid-auto-max grid auto-cols-fr gap-4\">\n      <VersionDescription changelog={$version.data.getVersion.changelog} approved={$version.data.getVersion.approved} />\n      <div class=\"grid auto-rows-min grid-cols-1 gap-8\">\n        <VersionInfo version={$version.data.getVersion} />\n        <VersionTargetSupportGrid targets={$version.data.getVersion.targets} />\n        <VersionDependenciesGrid dependencies={$version.data.getVersion.dependencies} />\n        {#if $version.data.getVersion.virustotal_results.length != 0}\n          <VirustotalResults results={$version.data.getVersion.virustotal_results} />\n        {/if}\n      </div>\n    </div>\n  </div>\n{:else}\n  <Page404 />\n{/if}\n"],"names":["load","async","params","parent","n","loadWaitForNoFetch","version","queryStore","query","GetModVersionDocument","client","variables","versionId","importance","AnnouncementImportance","Warning","insert_hydration_dev","target","div","anchor","ctx","p","html_tag","raw_value","create_if_block","handle_promise","promise","markdown","info","div2","append_hydration_dev","div1","section","div0","dirty","changelog","$$props","approved","t2_value","prettyDate","created_at","t7_value","prettyNumber","downloads","t12_value","t15_value","game_version","t17_value","prettyBytes","size","t22_value","t25_value","hash","h3","span0","strong0","br0","span1","strong1","br1","span2","strong2","br2","span3","strong3","br3","span4","strong4","set_data_dev","t2","t5","t5_value","t7","t10","t10_value","t12","t15","t17","t20","t20_value","t22","t25","t","getTranslate","t0_value","file_name","t4_value","safe","attr_dev","span0_title_value","a","a_title_value","a_href_value","span1_title_value","tr","td0","td1","td2","t0","t4","t6_value","length","i","div0_title_value","div1_title_value","div2_title_value","table","table_aria_label_value","div3","tbody","t6","results","description","data","getVersion","mod","name","title","metadescriptors_changes","create_if_block_5","targets","create_if_block_4","dependencies","virustotal_results","create_if_block_3","base","div4","h1","button","current","versiondescription_changes","versiontargetsupportgrid_changes","versiondependenciesgrid_changes","error","message","t1","t1_value","button0","button1","a0","API_REST","a1","each_value","ensure_array_like_dev","nav","ul","event","placement","closeQuery","prettyTarget","targetName","li","span","virustotalresults_changes","fetching","create_if_block_6","modId","getContextClient","toastStore","getToastStore","deleteVersionFn","mutation","DeleteVersionDocument","toPromise","then","value","console","trigger","background","autohide","timeout","goto","deleteModal","type","body","response","r","modalStore","getModalStore","installMod","$version","mod_reference","$$invalidate","canUserEdit","$user","roles","deleteContent","authors","findIndex","author","user_id","id"],"mappings":"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"}