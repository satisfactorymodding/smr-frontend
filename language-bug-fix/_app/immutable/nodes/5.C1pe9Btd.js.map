{"version":3,"file":"5.C1pe9Btd.js","sources":["../../../../../../src/routes/admin/tag-manager/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { CreateTagDocument, DeleteTagDocument, GetTagsDocument, UpdateTagDocument } from '$lib/generated';\n  import type { Tag } from '$lib/generated';\n  import { Accordion, AccordionItem, getToastStore } from '@skeletonlabs/skeleton';\n\n  const client = getContextClient();\n\n  let tags: Tag[] = [];\n  const panels = {};\n  const nameFields = {};\n  let tagNegativeID = -1;\n\n  const tagsQuery = queryStore({\n    query: GetTagsDocument,\n    client,\n    variables: {\n      limit: 100\n    }\n  });\n\n  $: tags = $tagsQuery.data?.getTags || [];\n\n  const toastStore = getToastStore();\n\n  function newTag() {\n    if (!tags.find((tag) => tag.name == 'New Tag')) {\n      const tag = { id: tagNegativeID--, name: 'New Tag', description: 'Description' } as Tag;\n      tags.push(tag);\n      tags = tags;\n      setTimeout(() => {\n        panels[tag.id].setOpen(true);\n        const field = nameFields[tag.id];\n        field.focus();\n        const input = field.getElement().querySelectorAll('input')[0] as HTMLInputElement;\n        input.select();\n      }, 0);\n    } else {\n      panels[tags[tags.length - 1].id].setOpen(true);\n      nameFields[tags[tags.length - 1].id].focus();\n    }\n  }\n\n  async function tagChange(tag: Tag) {\n    // ignore \"New Tag\"\n    if (tag.name == 'New Tag') {\n      return;\n    }\n\n    let success = false;\n    if (tag.id < 0) {\n      // Create new tag & update tag.id with new DB id or re-fetch all tags\n      try {\n        const result = await client\n          .mutation(CreateTagDocument, { tagName: tag.name, description: tag.description })\n          .toPromise();\n        if (result.data) {\n          tag.id = result.data.createTag.id;\n          success = true;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n      if (!success) {\n        toastStore.trigger({\n          message: `Failed to create Tag '${tag.name}'!`,\n          background: 'variant-filled-error',\n          timeout: 2000\n        });\n        return;\n      }\n    } else {\n      // Update existing tag\n      try {\n        success =\n          (\n            await client\n              .mutation(UpdateTagDocument, { tagID: tag.id, tagName: tag.name, description: tag.description })\n              .toPromise()\n          ).data.updateTag != null;\n      } catch {\n        // nothing\n      }\n      if (!success) {\n        toastStore.trigger({\n          message: `Failed to update Tag '${tag.name}'!`,\n          background: 'variant-filled-error',\n          timeout: 2000\n        });\n        return;\n      }\n    }\n\n    toastStore.trigger({\n      message: `Tag '${tag.name}' saved!`,\n      background: 'variant-filled-success',\n      timeout: 2000\n    });\n  }\n\n  async function deleteTag(tag: Tag) {\n    if (tag.name != 'New Tag') {\n      // Remove tag\n      let success = false;\n      try {\n        const result = await client.mutation(DeleteTagDocument, { tagID: tag.id }).toPromise();\n        success = result.data.deleteTag;\n      } catch {\n        success = false;\n      }\n      if (!success) {\n        toastStore.trigger({\n          message: `Failed to remove Tag '${tag.name}'!`,\n          background: 'variant-filled-error',\n          timeout: 2000\n        });\n        return;\n      }\n    }\n\n    toastStore.trigger({\n      message: `Tag '${tag.name}' removed!`,\n      background: 'variant-filled-success',\n      timeout: 2000\n    });\n  }\n\n  function onDeleteClick(e: Event, tag: Tag) {\n    e.stopPropagation();\n    deleteTag(tag);\n  }\n</script>\n\n<div class=\"card\">\n  {#if $tagsQuery.fetching}\n    <h1>Loading tags...</h1>\n  {:else if $tagsQuery.error}\n    <h1>Failed to load tags: {$tagsQuery.error.message}</h1>\n  {:else}\n    <Accordion>\n      {#each tags as tag}\n        <AccordionItem>\n          <svelte:fragment slot=\"summary\">{tag.name}</svelte:fragment>\n          <svelte:fragment slot=\"content\">\n            <div>\n              <input\n                type=\"text\"\n                class=\"input p-2\"\n                bind:value={tag.name}\n                placeholder=\"Name\"\n                bind:this={nameFields[tag.id]}\n                on:change={() => tagChange(tag)} />\n\n              <input\n                type=\"text\"\n                class=\"input p-2\"\n                bind:value={tag.description}\n                placeholder=\"Description\"\n                on:change={() => tagChange(tag)} />\n            </div>\n            <span slot=\"helper\">Human-Readable name and description of the tag that is shown in UI</span>\n\n            <button class=\"variant-ghost-error btn\" on:click={(e) => onDeleteClick(e, tag)}>\n              <span>Delete</span>\n            </button>\n          </svelte:fragment>\n        </AccordionItem>\n      {/each}\n    </Accordion>\n\n    <section class=\"p-4\">\n      <button class=\"variant-ghost-primary btn\" on:click={newTag}>\n        <span>Add new tag</span>\n        <span class=\"material-icons\">add</span>\n      </button>\n    </section>\n  {/if}\n</div>\n"],"names":["insert_hydration_dev","target","section","anchor","append_hydration_dev","button","span0","span1","ctx","error","message","h1","set_data_dev","t1","t1_value","t_value","name","dirty","t","div","input0","set_input_value","input1","description","value","length","i","each_blocks","fetching","client","getContextClient","tags","panels","nameFields","tagNegativeID","tagsQuery","queryStore","query","GetTagsDocument","variables","limit","toastStore","getToastStore","newTag","find","tag","id","setOpen","focus","push","setTimeout","field","getElement","querySelectorAll","select","async","tagChange","success","result","mutation","CreateTagDocument","tagName","toPromise","data","createTag","err","console","log","trigger","background","timeout","UpdateTagDocument","tagID","updateTag","deleteTag","DeleteTagDocument","onDeleteClick","e","stopPropagation","this","$$value","change_handler","change_handler_1","click_handler","$tagsQuery","getTags"],"mappings":"i3CA0KIA,EAAAA,EAKSC,EAAAC,EAAAC,CAAAA,EAJPC,EAGQF,EAAAG,GAFND,EAAuBC,EAAAC,UACvBF,EAAsCC,EAAAE,0BAFYC,EAAM,CAAA,EAAA,GAAA,GAAA,GAAA,EAAA,oVAlClCA,EAAU,CAAA,EAACC,MAAMC,QAAO,yCAA9C,wFAAA,yGAAJV,EAAuDC,EAAAU,EAAAR,CAAAA,6CAA7BK,EAAU,CAAA,EAACC,MAAMC,QAAO,KAAAE,GAAAC,EAAAC,oXAFlDd,EAAuBC,EAAAU,EAAAR,CAAAA,uKAOgB,CAAA,IAAAY,EAAAP,MAAIQ,KAAI,oGAAR,CAAAC,EAAA,GAAAF,KAAAA,EAAAP,IAAIQ,EAAAA,KAAI,KAAAJ,GAAAM,EAAAH,u5CAEvCf,EAeKC,EAAAkB,EAAAhB,CAdHC,EAAAA,EAMoCe,EAAAC,CAAAA,EAHtBC,EAAAD,EAAAZ,MAAIQ,iBAKlBZ,EAKoCe,EAAAG,CAFtBD,EAAAA,EAAAC,EAAAd,MAAIe,oBAIpBvB,EAAAA,EAA4FC,EAAAK,EAAAH,CAAAA,SAE5FH,EAAAA,EAEQC,EAAAI,EAAAF,GADNC,EAAkBC,EAAAE,gKAfJU,EAAA,GAAAG,EAAAI,QAAAhB,MAAIQ,MAAJK,EAAAD,EAAAZ,IAAIQ,EAAAA,IAAAA,+BAQJC,EAAA,GAAAK,EAAAE,QAAAhB,MAAIe,aAAJF,EAAAC,EAAAd,MAAIe,suBAhBnBf,EAAI,yBAATiB,OAAIC,GAAA,+RAAClB,EAAI,CAAA,CAAA,oBAATiB,OAAIC,GAAA,EAAA,mHAAJD,OAAIC,EAAAC,EAAAF,OAAAC,GAAA,mDAAJD,OAAIC,GAAA,oSANL,CAAA,OAAAlB,KAAWoB,SAAQ,EAEdpB,GAAWC,EAAAA,MAAK,8NAH5BT,EA4CKC,EAAAkB,EAAAhB,CAAAA,kaA3KG,MAAA0B,EAASC,QAEXC,EAAI,SACFC,EAAM,CAAA,EACNC,EAAU,CAAA,EACZ,IAAAC,EAAAA,GAEE,MAAAC,EAAYC,EAAU,CAC1BC,MAAOC,GACPT,OAAAA,EACAU,UAAS,CACPC,MAAO,GAAA,CAAA,CAAA,qCAML,CAAA,EAAA,MAAAC,EAAaC,aAEVC,OACFZ,EAAKa,KAAMC,GAAQA,EAAI7B,MAAQ,SAAS,EAY3CgB,EAAOD,EAAKA,EAAKN,OAAS,CAAGqB,EAAAA,EAAAA,EAAIC,QAAQ,EAAA,EACzCd,EAAWF,EAAKA,EAAKN,OAAS,CAAA,EAAGqB,IAAIE,YAbM,OACrCH,EAAG,CAAKC,GAAIZ,IAAiBlB,KAAM,UAAWO,YAAa,aACjEQ,EAAAA,EAAKkB,KAAKJ,CAAAA,cAEVK,EAAAA,eACElB,CAAAA,EAAOa,EAAIC,EAAAA,EAAIC,QAAQ,EAAA,EACjB,MAAAI,EAAQlB,EAAWY,EAAIC,EAAAA,EAC7BK,EAAMH,MAAAA,EACQG,EAAMC,WAAaC,EAAAA,iBAAiB,OAAS,EAAA,CAAA,EACrDC,OAAM,CAAA,EACX,IAOQC,eAAAC,EAAUX,MAEnBA,EAAI7B,MAAQ,iBAIZ,IAAAyC,EAAU,MACVZ,EAAIC,GAAK,EAAC,IAGJ,CAAA,MAAAY,QAAe7B,EAClB8B,SAASC,GAAiB,CAAIC,QAAShB,EAAI7B,KAAMO,YAAasB,EAAItB,WAClEuC,CAAAA,EAAAA,UAAAA,EACCJ,EAAOK,OACTlB,EAAIC,GAAKY,EAAOK,KAAKC,UAAUlB,GAC/BW,EAAU,UAELQ,GACPC,QAAQC,IAAIF,OAETR,EAAO,CACVhB,EAAW2B,QAAO,CAChB1D,QAAO,yBAA2BmC,EAAI7B,IAAAA,KACtCqD,WAAY,uBACZC,QAAS,GAAA,CAAA,mBAOXb,SAEU5B,EACH8B,SAASY,GAAiB,CAAIC,MAAO3B,EAAIC,GAAIe,QAAShB,EAAI7B,KAAMO,YAAasB,EAAItB,WAAAA,CAAAA,EACjFuC,aACHC,KAAKU,WAAa,gBAInBhB,EAAO,CACVhB,EAAW2B,QAAO,CAChB1D,QAAO,yBAA2BmC,EAAI7B,IAAAA,KACtCqD,WAAY,uBACZC,QAAS,cAMf7B,EAAW2B,QAAO,CAChB1D,QAAO,QAAUmC,EAAI7B,IAAAA,WACrBqD,WAAY,yBACZC,QAAS,GAAA,CAAA,EAIEf,eAAAmB,EAAU7B,MACnBA,EAAI7B,MAAQ,UAAS,CAEnB,IAAAyC,EAAU,OAGZA,GADMC,MAAe7B,EAAO8B,SAASgB,GAAqB,CAAAH,MAAO3B,EAAIC,KAAMgB,UAC3EL,GAAiBM,KAAKW,gBAEtBjB,EAAU,MAEPA,CAAAA,EAAO,CACVhB,EAAW2B,QAAO,CAChB1D,QAAO,yBAA2BmC,EAAI7B,IACtCqD,KAAAA,WAAY,uBACZC,QAAS,cAMf7B,EAAW2B,QAAO,CAChB1D,QAAO,QAAUmC,EAAI7B,IACrBqD,aAAAA,WAAY,yBACZC,QAAS,eAIJM,EAAcC,EAAUhC,EAC/BgC,CAAAA,EAAEC,gBACFJ,EAAAA,EAAU7B,sKAmBkB7B,EAAAA,KAAI+D,KAAAvD,+DAETS,CAAAA,EAAWY,EAAIC,EAAEkC,EAAAA,WACX,MAAAC,EAAApC,GAAAW,EAAUX,wBAKXtB,YAAWwD,KAAAvD,oBAEV,MAAA0D,EAAArC,GAAAW,EAAUX,CAIoB,EAAAsC,EAAA,CAAAtC,EAAAgC,IAAMD,EAAcC,EAAGhC,CAAAA,yfA7IjFd,EAAOqD,EAAWrB,MAAMsB,SAAO,CAAA,CAAA"}