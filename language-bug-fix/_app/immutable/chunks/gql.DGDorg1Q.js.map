{"version":3,"file":"gql.DGDorg1Q.js","sources":["../../../../../../src/lib/utils/gql.ts"],"sourcesContent":["import type { OperationResultStore } from '@urql/svelte';\nimport { browser } from '$app/environment';\n\nexport const loadWaitForNoFetch = async <T extends Record<string, OperationResultStore>>(queries: T): Promise<T> => {\n  // If on SSR, block the load until all queries have returned\n  if (!browser) {\n    await Promise.all(\n      Object.values(queries).map(\n        (query) =>\n          new Promise<void>((resolve) => {\n            query.subscribe((res) => {\n              if (!res.fetching) {\n                resolve();\n              }\n            });\n          })\n      )\n    );\n  }\n  return queries;\n};\n"],"names":["loadWaitForNoFetch","async","queries"],"mappings":"AAGa,MAAAA,EAAqBC,MAAuDC,GAgBhFA"}