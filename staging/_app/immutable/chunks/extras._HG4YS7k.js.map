{"version":3,"file":"extras._HG4YS7k.js","sources":["../../../../../../node_modules/dompurify/dist/purify.es.mjs","../../../../../../node_modules/marked/lib/marked.esm.js","../../../../../../node_modules/marked-mangle/src/index.js","../../../../../../node_modules/marked-gfm-heading-id/src/index.js","../../../../../../node_modules/prismjs/prism.js","../../../../../../node_modules/prismjs/components/prism-c.js","../../../../../../node_modules/prismjs/components/prism-cpp.js","../../../../../../node_modules/prismjs/components/prism-lua.js","../../../../../../node_modules/prismjs/components/prism-javascript.js","../../../../../../node_modules/prismjs/components/prism-json.js","../../../../../../node_modules/prismjs/components/prism-python.js","../../../../../../node_modules/prismjs/components/prism-markdown.js","../../../../../../node_modules/prismjs/components/prism-markup.js","../../../../../../node_modules/@cfworker/json-schema/dist/deep-compare-strict.js","../../../../../../node_modules/@cfworker/json-schema/dist/pointer.js","../../../../../../node_modules/@cfworker/json-schema/dist/dereference.js","../../../../../../node_modules/@cfworker/json-schema/dist/format.js","../../../../../../node_modules/@cfworker/json-schema/dist/ucs2-length.js","../../../../../../node_modules/@cfworker/json-schema/dist/validate.js","../../../../../../node_modules/@cfworker/json-schema/dist/validator.js"],"sourcesContent":["/*! @license DOMPurify 3.1.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.1.6/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param {Function} func - The function to be wrapped and called.\n * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param {Function} func - The constructor function to be wrapped and called.\n * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n\n/**\n * Add properties to a lookup table\n *\n * @param {Object} set - The set to which elements will be added.\n * @param {Array} array - The array containing elements to be added to the set.\n * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns {Object} The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n\n/**\n * Clean up an array to harden against CSPP\n *\n * @param {Array} array - The array to be cleaned.\n * @returns {Array} The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n\n/**\n * Shallow clone an object\n *\n * @param {Object} object - The object to be cloned.\n * @returns {Object} A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param {Object} object - The object to look up the getter function in its prototype chain.\n * @param {String} prop - The property name for which to find the getter function.\n * @returns {Function} The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n// SVG\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  ERB_EXPR: ERB_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR,\n  DATA_ATTR: DATA_ATTR,\n  ARIA_ATTR: ARIA_ATTR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT\n});\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = '3.1.6';\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES),\n    // eslint-disable-line indent\n    cfg.ADD_URI_SAFE_ATTR,\n    // eslint-disable-line indent\n    transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n    : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS),\n    // eslint-disable-line indent\n    cfg.ADD_DATA_URI_TAGS,\n    // eslint-disable-line indent\n    transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n    : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'annotation-xml']);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n\n  /**\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node\n      });\n    }\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param  {Node} root The root element or node to start traversing on.\n   * @return {NodeIterator} The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(elm) {\n    return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n  };\n\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param  {Node} object object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function _isNode(object) {\n    return typeof Node === 'function' && object instanceof Node;\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n    arrayForEach(hooks[entryPoint], hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param {string} tagName name of the tag of the node to sanitize\n   * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    let l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n        } else {\n          arrayPop(DOMPurify.removed);\n        }\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} cfg object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n    }\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {String} tag Tag name of containing element.\n   * @param  {String} attr Attribute name.\n   * @param  {String} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n","/**\n * marked v13.0.2 - a markdown parser\n * Copyright (c) 2011-2024, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null\n    };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape$1(html, encode) {\n    if (encode) {\n        if (escapeTest.test(html)) {\n            return html.replace(escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (escapeTestNoEncode.test(html)) {\n            return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\nfunction unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, (_, n) => {\n        n = n.toLowerCase();\n        if (n === 'colon')\n            return ':';\n        if (n.charAt(0) === '#') {\n            return n.charAt(1) === 'x'\n                ? String.fromCharCode(parseInt(n.substring(2), 16))\n                : String.fromCharCode(+n.substring(1));\n        }\n        return '';\n    });\n}\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        }\n    };\n    return obj;\n}\nfunction cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(/%25/g, '%');\n    }\n    catch (e) {\n        return null;\n    }\n    return href;\n}\nconst noopTest = { exec: () => null };\nfunction splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(/ \\|/);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n    const href = link.href;\n    const title = link.title ? escape$1(link.title) : null;\n    const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text)\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text: escape$1(text)\n    };\n}\nfunction indentCodeCompensation(raw, text) {\n    const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(/^\\s+/);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0]\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(/^ {1,4}/gm, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '');\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (/#$/.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || / $/.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: rtrim(cap[0], '\\n')\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            let lines = rtrim(cap[0], '\\n').split('\\n');\n            let raw = '';\n            let text = '';\n            const tokens = [];\n            while (lines.length > 0) {\n                let inBlockquote = false;\n                const currentLines = [];\n                let i;\n                for (i = 0; i < lines.length; i++) {\n                    // get lines up to a continuation\n                    if (/^ {0,3}>/.test(lines[i])) {\n                        currentLines.push(lines[i]);\n                        inBlockquote = true;\n                    }\n                    else if (!inBlockquote) {\n                        currentLines.push(lines[i]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                lines = lines.slice(i);\n                const currentRaw = currentLines.join('\\n');\n                const currentText = currentRaw\n                    // precede setext continuation with 4 spaces so it isn't a setext\n                    .replace(/\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g, '\\n    $1')\n                    .replace(/^ {0,3}>[ \\t]?/gm, '');\n                raw = raw ? `${raw}\\n${currentRaw}` : currentRaw;\n                text = text ? `${text}\\n${currentText}` : currentText;\n                // parse blockquote lines as top level tokens\n                // merge paragraphs if this is a continuation\n                const top = this.lexer.state.top;\n                this.lexer.state.top = true;\n                this.lexer.blockTokens(currentText, tokens, true);\n                this.lexer.state.top = top;\n                // if there is no continuation then we are done\n                if (lines.length === 0) {\n                    break;\n                }\n                const lastToken = tokens[tokens.length - 1];\n                if (lastToken?.type === 'code') {\n                    // blockquote continuation cannot be preceded by a code block\n                    break;\n                }\n                else if (lastToken?.type === 'blockquote') {\n                    // include continuation in nested blockquote\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.blockquote(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n                    break;\n                }\n                else if (lastToken?.type === 'list') {\n                    // include continuation in nested list\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.list(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n                    lines = newText.substring(tokens[tokens.length - 1].raw.length).split('\\n');\n                    continue;\n                }\n            }\n            return {\n                type: 'blockquote',\n                raw,\n                tokens,\n                text\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: []\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                let raw = '';\n                let itemContents = '';\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let blankLine = !line.trim();\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else if (blankLine) {\n                    indent = cap[1].length + 1;\n                }\n                else {\n                    indent = cap[2].search(/[^ ]/); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                if (blankLine && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n                    const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n                    const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n                    const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(src)) {\n                            break;\n                        }\n                        if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLine.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.search(/[^ ]/) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLine.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (/\\n *\\n *$/.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = /^\\[[ xX]\\] /.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: []\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            list.items[list.items.length - 1].raw = list.items[list.items.length - 1].raw.trimEnd();\n            list.items[list.items.length - 1].text = list.items[list.items.length - 1].text.trimEnd();\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0]\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n            const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!/[:|]/.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(/^\\||\\| *$/g, '').split('|');\n        const rows = cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: []\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (/^ *-+: *$/.test(align)) {\n                item.align.push('right');\n            }\n            else if (/^ *:-+: *$/.test(align)) {\n                item.align.push('center');\n            }\n            else if (/^ *:-+ *$/.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (let i = 0; i < headers.length; i++) {\n            item.header.push({\n                text: headers[i],\n                tokens: this.lexer.inline(headers[i]),\n                header: true,\n                align: item.align[i]\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell),\n                    header: false,\n                    align: item.align[i]\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1])\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0])\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: escape$1(cap[1])\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0]\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(/>$/.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (/^</.test(href)) {\n                if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title\n            }, cap[0], this.lexer);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text)\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text)\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(/\\n/g, ' ');\n            const hasNonSpaceChars = /[^ ]/.test(text);\n            const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            text = escape$1(text, true);\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0]\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2])\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape$1(cap[1]);\n                href = 'mailto:' + text;\n            }\n            else {\n                text = escape$1(cap[1]);\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape$1(cap[0]);\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = escape$1(cap[0]);\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            let text;\n            if (this.lexer.state.inRawBlock) {\n                text = cap[0];\n            }\n            else {\n                text = escape$1(cap[0]);\n            }\n            return {\n                type: 'text',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n}\n\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?: *(?:\\n|$))+/;\nconst blockCode = /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheading = edit(/^(?!bull |blockCode|fences|blockquote|heading|html)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, / {4}/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n    + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', ' {4}[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex()\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex()\n};\n/**\n * Inline-Level Grammar\n */\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = '\\\\p{P}\\\\p{S}';\nconst punctuation = edit(/^((?![*_])[\\spunctuation])/, 'u')\n    .replace(/punctuation/g, _punctuation).getRegex();\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelim = edit(/^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAst = edit('^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)[punct](\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?!\\\\*)(?=[punct\\\\s]|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)[punct\\\\s](\\\\*+)(?=[^punct\\\\s])' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=[punct])' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)[punct](\\\\*+)(?!\\\\*)(?=[punct])' // (5) #***# can be either Left or Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?=[^punct\\\\s])', 'gu') // (6) a***a can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)[punct](_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|[^punct\\\\s](_+)(?!_)(?=[punct\\\\s]|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)[punct\\\\s](_+)(?=[^punct\\\\s])' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=[punct])' // (4) ___# can only be Left Delimiter\n    + '|(?!_)[punct](_+)(?!_)(?=[punct])', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\([punct])/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex()\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    escape: edit(escape).replace('])', '~|])').getRegex(),\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex()\n};\n/**\n * exports\n */\nconst block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic\n};\nconst inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic\n};\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true\n        };\n        const rules = {\n            block: block.normal,\n            inline: inline.normal\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src\n            .replace(/\\r\\n|\\r/g, '\\n');\n        this.blockTokens(src, this.tokens);\n        for (let i = 0; i < this.inlineQueue.length; i++) {\n            const next = this.inlineQueue[i];\n            this.inlineTokens(next.src, next.tokens);\n        }\n        this.inlineQueue = [];\n        return this.tokens;\n    }\n    blockTokens(src, tokens = [], lastParagraphClipped = false) {\n        if (this.options.pedantic) {\n            src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n        }\n        else {\n            src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n                return leading + '    '.repeat(tabs.length);\n            });\n        }\n        let token;\n        let lastToken;\n        let cutSrc;\n        while (src) {\n            if (this.options.extensions\n                && this.options.extensions.block\n                && this.options.extensions.block.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.length === 1 && tokens.length > 0) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    tokens[tokens.length - 1].raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                lastToken = tokens[tokens.length - 1];\n                if (lastParagraphClipped && lastToken?.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = (cutSrc.length !== src.length);\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        let token, lastToken, cutSrc;\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match;\n        let keepPrevChar, prevChar;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            // extensions\n            if (this.options.extensions\n                && this.options.extensions.inline\n                && this.options.extensions.inline.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n    options;\n    parser; // set by the parser\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(token) {\n        return '';\n    }\n    code({ text, lang, escaped }) {\n        const langString = (lang || '').match(/^\\S*/)?.[0];\n        const code = text.replace(/\\n$/, '') + '\\n';\n        if (!langString) {\n            return '<pre><code>'\n                + (escaped ? code : escape$1(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape$1(langString)\n            + '\">'\n            + (escaped ? code : escape$1(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote({ tokens }) {\n        const body = this.parser.parse(tokens);\n        return `<blockquote>\\n${body}</blockquote>\\n`;\n    }\n    html({ text }) {\n        return text;\n    }\n    heading({ tokens, depth }) {\n        return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\\n`;\n    }\n    hr(token) {\n        return '<hr>\\n';\n    }\n    list(token) {\n        const ordered = token.ordered;\n        const start = token.start;\n        let body = '';\n        for (let j = 0; j < token.items.length; j++) {\n            const item = token.items[j];\n            body += this.listitem(item);\n        }\n        const type = ordered ? 'ol' : 'ul';\n        const startAttr = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startAttr + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(item) {\n        let itemBody = '';\n        if (item.task) {\n            const checkbox = this.checkbox({ checked: !!item.checked });\n            if (item.loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                    }\n                }\n                else {\n                    item.tokens.unshift({\n                        type: 'text',\n                        raw: checkbox + ' ',\n                        text: checkbox + ' '\n                    });\n                }\n            }\n            else {\n                itemBody += checkbox + ' ';\n            }\n        }\n        itemBody += this.parser.parse(item.tokens, !!item.loose);\n        return `<li>${itemBody}</li>\\n`;\n    }\n    checkbox({ checked }) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph({ tokens }) {\n        return `<p>${this.parser.parseInline(tokens)}</p>\\n`;\n    }\n    table(token) {\n        let header = '';\n        // header\n        let cell = '';\n        for (let j = 0; j < token.header.length; j++) {\n            cell += this.tablecell(token.header[j]);\n        }\n        header += this.tablerow({ text: cell });\n        let body = '';\n        for (let j = 0; j < token.rows.length; j++) {\n            const row = token.rows[j];\n            cell = '';\n            for (let k = 0; k < row.length; k++) {\n                cell += this.tablecell(row[k]);\n            }\n            body += this.tablerow({ text: cell });\n        }\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow({ text }) {\n        return `<tr>\\n${text}</tr>\\n`;\n    }\n    tablecell(token) {\n        const content = this.parser.parseInline(token.tokens);\n        const type = token.header ? 'th' : 'td';\n        const tag = token.align\n            ? `<${type} align=\"${token.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong({ tokens }) {\n        return `<strong>${this.parser.parseInline(tokens)}</strong>`;\n    }\n    em({ tokens }) {\n        return `<em>${this.parser.parseInline(tokens)}</em>`;\n    }\n    codespan({ text }) {\n        return `<code>${text}</code>`;\n    }\n    br(token) {\n        return '<br>';\n    }\n    del({ tokens }) {\n        return `<del>${this.parser.parseInline(tokens)}</del>`;\n    }\n    link({ href, title, tokens }) {\n        const text = this.parser.parseInline(tokens);\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + title + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image({ href, title, text }) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${title}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(token) {\n        return 'tokens' in token && token.tokens ? this.parser.parseInline(token.tokens) : token.text;\n    }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n    // no need for block level renderers\n    strong({ text }) {\n        return text;\n    }\n    em({ text }) {\n        return text;\n    }\n    codespan({ text }) {\n        return text;\n    }\n    del({ text }) {\n        return text;\n    }\n    html({ text }) {\n        return text;\n    }\n    text({ text }) {\n        return text;\n    }\n    link({ text }) {\n        return '' + text;\n    }\n    image({ text }) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.renderer.parser = this;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[anyToken.type]) {\n                const genericToken = anyToken;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'space': {\n                    out += this.renderer.space(token);\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr(token);\n                    continue;\n                }\n                case 'heading': {\n                    out += this.renderer.heading(token);\n                    continue;\n                }\n                case 'code': {\n                    out += this.renderer.code(token);\n                    continue;\n                }\n                case 'table': {\n                    out += this.renderer.table(token);\n                    continue;\n                }\n                case 'blockquote': {\n                    out += this.renderer.blockquote(token);\n                    continue;\n                }\n                case 'list': {\n                    out += this.renderer.list(token);\n                    continue;\n                }\n                case 'html': {\n                    out += this.renderer.html(token);\n                    continue;\n                }\n                case 'paragraph': {\n                    out += this.renderer.paragraph(token);\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = this.renderer.text(textToken);\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + this.renderer.text(textToken);\n                    }\n                    if (top) {\n                        out += this.renderer.paragraph({\n                            type: 'paragraph',\n                            raw: body,\n                            text: body,\n                            tokens: [{ type: 'text', raw: body, text: body }]\n                        });\n                    }\n                    else {\n                        out += body;\n                    }\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer) {\n        renderer = renderer || this.renderer;\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[anyToken.type]) {\n                const ret = this.options.extensions.renderers[anyToken.type].call({ parser: this }, anyToken);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(anyToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'escape': {\n                    out += renderer.text(token);\n                    break;\n                }\n                case 'html': {\n                    out += renderer.html(token);\n                    break;\n                }\n                case 'link': {\n                    out += renderer.link(token);\n                    break;\n                }\n                case 'image': {\n                    out += renderer.image(token);\n                    break;\n                }\n                case 'strong': {\n                    out += renderer.strong(token);\n                    break;\n                }\n                case 'em': {\n                    out += renderer.em(token);\n                    break;\n                }\n                case 'codespan': {\n                    out += renderer.codespan(token);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br(token);\n                    break;\n                }\n                case 'del': {\n                    out += renderer.del(token);\n                    break;\n                }\n                case 'text': {\n                    out += renderer.text(token);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n\nclass _Hooks {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess',\n        'processAllTokens'\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n    /**\n     * Process all tokens before walk tokens\n     */\n    processAllTokens(tokens) {\n        return tokens;\n    }\n}\n\nclass Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.#parseMarkdown(_Lexer.lex, _Parser.parse);\n    parseInline = this.#parseMarkdown(_Lexer.lexInline, _Parser.parseInline);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            const tokens = genericToken[childTokens].flat(Infinity);\n                            values = values.concat(this.walkTokens(tokens, callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer)) {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    if (['options', 'parser'].includes(prop)) {\n                        // ignore options property\n                        continue;\n                    }\n                    const rendererProp = prop;\n                    let rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        if (!pack.useNewRenderer) {\n                            // TODO: Remove this in next major version\n                            rendererFunc = this.#convertRendererFunction(rendererFunc, rendererProp, renderer);\n                        }\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    if (['options', 'rules', 'lexer'].includes(prop)) {\n                        // ignore options, rules, and lexer properties\n                        continue;\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks)) {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    if (prop === 'options') {\n                        // ignore options property\n                        continue;\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    // TODO: Remove this in next major release\n    #convertRendererFunction(func, prop, renderer) {\n        switch (prop) {\n            case 'heading':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, renderer.parser.parseInline(token.tokens), token.depth, unescape(renderer.parser.parseInline(token.tokens, renderer.parser.textRenderer)));\n                };\n            case 'code':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, token.text, token.lang, !!token.escaped);\n                };\n            case 'table':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    let header = '';\n                    // header\n                    let cell = '';\n                    for (let j = 0; j < token.header.length; j++) {\n                        cell += this.tablecell({\n                            text: token.header[j].text,\n                            tokens: token.header[j].tokens,\n                            header: true,\n                            align: token.align[j]\n                        });\n                    }\n                    header += this.tablerow({ text: cell });\n                    let body = '';\n                    for (let j = 0; j < token.rows.length; j++) {\n                        const row = token.rows[j];\n                        cell = '';\n                        for (let k = 0; k < row.length; k++) {\n                            cell += this.tablecell({\n                                text: row[k].text,\n                                tokens: row[k].tokens,\n                                header: false,\n                                align: token.align[k]\n                            });\n                        }\n                        body += this.tablerow({ text: cell });\n                    }\n                    return func.call(this, header, body);\n                };\n            case 'blockquote':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    const body = this.parser.parse(token.tokens);\n                    return func.call(this, body);\n                };\n            case 'list':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    const ordered = token.ordered;\n                    const start = token.start;\n                    const loose = token.loose;\n                    let body = '';\n                    for (let j = 0; j < token.items.length; j++) {\n                        const item = token.items[j];\n                        const checked = item.checked;\n                        const task = item.task;\n                        let itemBody = '';\n                        if (item.task) {\n                            const checkbox = this.checkbox({ checked: !!checked });\n                            if (loose) {\n                                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                                    }\n                                }\n                                else {\n                                    item.tokens.unshift({\n                                        type: 'text',\n                                        text: checkbox + ' '\n                                    });\n                                }\n                            }\n                            else {\n                                itemBody += checkbox + ' ';\n                            }\n                        }\n                        itemBody += this.parser.parse(item.tokens, loose);\n                        body += this.listitem({\n                            type: 'list_item',\n                            raw: itemBody,\n                            text: itemBody,\n                            task,\n                            checked: !!checked,\n                            loose,\n                            tokens: item.tokens\n                        });\n                    }\n                    return func.call(this, body, ordered, start);\n                };\n            case 'html':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, token.text, token.block);\n                };\n            case 'paragraph':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, this.parser.parseInline(token.tokens));\n                };\n            case 'escape':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, token.text);\n                };\n            case 'link':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, token.href, token.title, this.parser.parseInline(token.tokens));\n                };\n            case 'image':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, token.href, token.title, token.text);\n                };\n            case 'strong':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, this.parser.parseInline(token.tokens));\n                };\n            case 'em':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, this.parser.parseInline(token.tokens));\n                };\n            case 'codespan':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, token.text);\n                };\n            case 'del':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, this.parser.parseInline(token.tokens));\n                };\n            case 'text':\n                return function (token) {\n                    if (!token.type || token.type !== prop) {\n                        // @ts-ignore\n                        // eslint-disable-next-line prefer-rest-params\n                        return func.apply(this, arguments);\n                    }\n                    return func.call(this, token.text);\n                };\n            // do nothing\n        }\n        return func;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    #parseMarkdown(lexer, parser) {\n        return (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            // Show warning if an extension set async to true but the parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                if (!opt.silent) {\n                    console.warn('marked(): The async option was set to true by an extension. The async: false option sent to parse will be ignored.');\n                }\n                opt.async = true;\n            }\n            const throwError = this.#onError(!!opt.silent, !!opt.async);\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n            }\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                let tokens = lexer(src, opt);\n                if (opt.hooks) {\n                    tokens = opt.hooks.processAllTokens(tokens);\n                }\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n    }\n    #onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape$1(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\n\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n//# sourceMappingURL=marked.esm.js.map\n","export function mangle() {\n  return {\n    mangle: false, // remove this once mangle option is removed\n    walkTokens(token) {\n      if (token.type !== 'link') {\n        return;\n      }\n\n      if (!token.href.startsWith('mailto:')) {\n        return;\n      }\n\n      const email = token.href.substring(7);\n      const mangledEmail = mangleEmail(email);\n\n      token.href = `mailto:${mangledEmail}`;\n\n      if (token.tokens.length !== 1 || token.tokens[0].type !== 'text' || token.tokens[0].text !== email) {\n        return;\n      }\n\n      token.text = mangledEmail;\n      token.tokens[0].text = mangledEmail;\n    }\n  };\n}\n\nfunction mangleEmail(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n","import GithubSlugger from 'github-slugger';\nlet slugger = new GithubSlugger();\n\nlet headings = [];\n\n// unescape from marked helpers\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n/* istanbul ignore next */\nexport function unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nexport function gfmHeadingId({ prefix = '', globalSlugs = false } = {}) {\n  return {\n    headerIds: false, // prevent deprecation warning; remove this once headerIds option is removed\n    hooks: {\n      preprocess(src) {\n        if (!globalSlugs) {\n          resetHeadings();\n        }\n        return src;\n      }\n    },\n    useNewRenderer: true,\n    renderer: {\n      heading({ tokens, depth }) {\n        const text = this.parser.parseInline(tokens);\n        const raw = unescape(this.parser.parseInline(tokens, this.parser.textRenderer))\n          .toLowerCase()\n          .trim()\n          .replace(/<[!\\/a-z].*?>/gi, '');\n        const level = depth;\n        const id = `${prefix}${slugger.slug(raw)}`;\n        const heading = { level, text, id };\n        headings.push(heading);\n\n        return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n      }\n    }\n  };\n}\n\nexport function getHeadingList() {\n  return headings;\n}\n\nexport function resetHeadings() {\n  headings = [];\n  slugger = new GithubSlugger();\n}\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","Prism.languages.c = Prism.languages.extend('clike', {\n\t'comment': {\n\t\tpattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\t// https://en.cppreference.com/w/c/language/string_literal\n\t\tpattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n\t\tlookbehind: true\n\t},\n\t'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n\t'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n\t'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n\t'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\n\nPrism.languages.insertBefore('c', 'string', {\n\t'char': {\n\t\t// https://en.cppreference.com/w/c/language/character_constant\n\t\tpattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n\t\tgreedy: true\n\t}\n});\n\nPrism.languages.insertBefore('c', 'string', {\n\t'macro': {\n\t\t// allow for multiline macro definitions\n\t\t// spaces after the # character compile fine with gcc\n\t\tpattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property',\n\t\tinside: {\n\t\t\t'string': [\n\t\t\t\t{\n\t\t\t\t\t// highlight the path of the include statement as a string\n\t\t\t\t\tpattern: /^(#\\s*include\\s*)<[^>]+>/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\tPrism.languages.c['string']\n\t\t\t],\n\t\t\t'char': Prism.languages.c['char'],\n\t\t\t'comment': Prism.languages.c['comment'],\n\t\t\t'macro-name': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'function'\n\t\t\t\t}\n\t\t\t],\n\t\t\t// highlight macro directives as keywords\n\t\t\t'directive': {\n\t\t\t\tpattern: /^(#\\s*)[a-z]+/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t'directive-hash': /^#/,\n\t\t\t'punctuation': /##|\\\\(?=[\\r\\n])/,\n\t\t\t'expression': {\n\t\t\t\tpattern: /\\S[\\s\\S]*/,\n\t\t\t\tinside: Prism.languages.c\n\t\t\t}\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('c', 'function', {\n\t// highlight predefined macros as constants\n\t'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\n\ndelete Prism.languages.c['boolean'];\n","(function (Prism) {\n\n\tvar keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n\tvar modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () { return keyword.source; });\n\n\tPrism.languages.cpp = Prism.languages.extend('c', {\n\t\t'class-name': [\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source\n\t\t\t\t\t.replace(/<keyword>/g, function () { return keyword.source; })),\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t// This is intended to capture the class name of method implementations like:\n\t\t\t//   void foo::bar() const {}\n\t\t\t// However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n\t\t\t// it starts with an uppercase letter. This approximation should give decent results.\n\t\t\t/\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\n\t\t\t// This will capture the class name before destructors like:\n\t\t\t//   Foo::~Foo() {}\n\t\t\t/\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\n\t\t\t// This also intends to capture the class name of method implementations but here the class has template\n\t\t\t// parameters, so it can't be a namespace (until C++ adds generic namespaces).\n\t\t\t/\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n\t\t],\n\t\t'keyword': keyword,\n\t\t'number': {\n\t\t\tpattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n\t\t\tgreedy: true\n\t\t},\n\t\t'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n\t\t'boolean': /\\b(?:false|true)\\b/\n\t});\n\n\tPrism.languages.insertBefore('cpp', 'string', {\n\t\t'module': {\n\t\t\t// https://en.cppreference.com/w/cpp/language/modules\n\t\t\tpattern: RegExp(\n\t\t\t\t/(\\b(?:import|module)\\s+)/.source +\n\t\t\t\t'(?:' +\n\t\t\t\t// header-name\n\t\t\t\t/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source +\n\t\t\t\t'|' +\n\t\t\t\t// module name or partition or both\n\t\t\t\t/<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () { return modName; }) +\n\t\t\t\t')'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'string': /^[<\"][\\s\\S]+/,\n\t\t\t\t'operator': /:/,\n\t\t\t\t'punctuation': /\\./\n\t\t\t}\n\t\t},\n\t\t'raw-string': {\n\t\t\tpattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n\t\t\talias: 'string',\n\t\t\tgreedy: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('cpp', 'keyword', {\n\t\t'generic-function': {\n\t\t\tpattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n\t\t\tinside: {\n\t\t\t\t'function': /^\\w+/,\n\t\t\t\t'generic': {\n\t\t\t\t\tpattern: /<[\\s\\S]+/,\n\t\t\t\t\talias: 'class-name',\n\t\t\t\t\tinside: Prism.languages.cpp\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('cpp', 'operator', {\n\t\t'double-colon': {\n\t\t\tpattern: /::/,\n\t\t\talias: 'punctuation'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('cpp', 'class-name', {\n\t\t// the base clause is an optional list of parent classes\n\t\t// https://en.cppreference.com/w/cpp/language/class\n\t\t'base-clause': {\n\t\t\tpattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: Prism.languages.extend('cpp', {})\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('inside', 'double-colon', {\n\t\t// All untokenized words that are not namespaces should be class names\n\t\t'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n\t}, Prism.languages.cpp['base-clause']);\n\n}(Prism));\n","Prism.languages.lua = {\n\t'comment': /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n\t// \\z may be used to skip the following space\n\t'string': {\n\t\tpattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n\t\tgreedy: true\n\t},\n\t'number': /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n\t'keyword': /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n\t'function': /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n\t'operator': [\n\t\t/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n\t\t{\n\t\t\t// Match \"..\" but don't break \"...\"\n\t\t\tpattern: /(^|[^.])\\.\\.(?!\\.)/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'punctuation': /[\\[\\](){},;]|\\.+|:+/\n};\n","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","// https://www.json.org/json-en.html\nPrism.languages.json = {\n\t'property': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'comment': {\n\t\tpattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\tgreedy: true\n\t},\n\t'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n\t'punctuation': /[{}[\\],]/,\n\t'operator': /:/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t}\n};\n\nPrism.languages.webmanifest = Prism.languages.json;\n","Prism.languages.python = {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#.*/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string-interpolation': {\n\t\tpattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\t// \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n\t\t\t\tpattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'format-spec': {\n\t\t\t\t\t\tpattern: /(:)[^:(){}]+(?=\\}$)/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'conversion-option': {\n\t\t\t\t\t\tpattern: /![sra](?=[:}]$)/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: null\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'triple-quoted-string': {\n\t\tpattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n\t\tgreedy: true,\n\t\talias: 'string'\n\t},\n\t'string': {\n\t\tpattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n\t\tgreedy: true\n\t},\n\t'function': {\n\t\tpattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n\t\tlookbehind: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\bclass\\s+)\\w+/i,\n\t\tlookbehind: true\n\t},\n\t'decorator': {\n\t\tpattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n\t\tlookbehind: true,\n\t\talias: ['annotation', 'punctuation'],\n\t\tinside: {\n\t\t\t'punctuation': /\\./\n\t\t}\n\t},\n\t'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n\t'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n\t'boolean': /\\b(?:False|None|True)\\b/,\n\t'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n\t'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\n\nPrism.languages.py = Prism.languages.python;\n","(function (Prism) {\n\n\t// Allow only one line break\n\tvar inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n\n\t/**\n\t * This function is intended for the creation of the bold or italic pattern.\n\t *\n\t * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n\t *\n\t * _Note:_ Keep in mind that this adds a capturing group.\n\t *\n\t * @param {string} pattern\n\t * @returns {RegExp}\n\t */\n\tfunction createInline(pattern) {\n\t\tpattern = pattern.replace(/<inner>/g, function () { return inner; });\n\t\treturn RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n\t}\n\n\n\tvar tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n\tvar tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () { return tableCell; });\n\tvar tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n\n\n\tPrism.languages.markdown = Prism.languages.extend('markup', {});\n\tPrism.languages.insertBefore('markdown', 'prolog', {\n\t\t'front-matter-block': {\n\t\t\tpattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^---|---$/,\n\t\t\t\t'front-matter': {\n\t\t\t\t\tpattern: /\\S+(?:\\s+\\S+)*/,\n\t\t\t\t\talias: ['yaml', 'language-yaml'],\n\t\t\t\t\tinside: Prism.languages.yaml\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'blockquote': {\n\t\t\t// > ...\n\t\t\tpattern: /^>(?:[\\t ]*>)*/m,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'table': {\n\t\t\tpattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n\t\t\tinside: {\n\t\t\t\t'table-data-rows': {\n\t\t\t\t\tpattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'table-data': {\n\t\t\t\t\t\t\tpattern: RegExp(tableCell),\n\t\t\t\t\t\t\tinside: Prism.languages.markdown\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /\\|/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'table-line': {\n\t\t\t\t\tpattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\||:?-{3,}:?/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'table-header-row': {\n\t\t\t\t\tpattern: RegExp('^' + tableRow + '$'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'table-header': {\n\t\t\t\t\t\t\tpattern: RegExp(tableCell),\n\t\t\t\t\t\t\talias: 'important',\n\t\t\t\t\t\t\tinside: Prism.languages.markdown\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /\\|/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'code': [\n\t\t\t{\n\t\t\t\t// Prefixed by 4 spaces or 1 tab and preceded by an empty line\n\t\t\t\tpattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t{\n\t\t\t\t// ```optional language\n\t\t\t\t// code block\n\t\t\t\t// ```\n\t\t\t\tpattern: /^```[\\s\\S]*?^```$/m,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'code-block': {\n\t\t\t\t\t\tpattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'code-language': {\n\t\t\t\t\t\tpattern: /^(```).+/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /```/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'title': [\n\t\t\t{\n\t\t\t\t// title 1\n\t\t\t\t// =======\n\n\t\t\t\t// title 2\n\t\t\t\t// -------\n\t\t\t\tpattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n\t\t\t\talias: 'important',\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: /==+$|--+$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// # title 1\n\t\t\t\t// ###### title 6\n\t\t\t\tpattern: /(^\\s*)#.+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'important',\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: /^#+|#+$/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'hr': {\n\t\t\t// ***\n\t\t\t// ---\n\t\t\t// * * *\n\t\t\t// -----------\n\t\t\tpattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'list': {\n\t\t\t// * item\n\t\t\t// + item\n\t\t\t// - item\n\t\t\t// 1. item\n\t\t\tpattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'url-reference': {\n\t\t\t// [id]: http://example.com \"Optional title\"\n\t\t\t// [id]: http://example.com 'Optional title'\n\t\t\t// [id]: http://example.com (Optional title)\n\t\t\t// [id]: <http://example.com> \"Optional title\"\n\t\t\tpattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n\t\t\tinside: {\n\t\t\t\t'variable': {\n\t\t\t\t\tpattern: /^(!?\\[)[^\\]]+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n\t\t\t\t'punctuation': /^[\\[\\]!:]|[<>]/\n\t\t\t},\n\t\t\talias: 'url'\n\t\t},\n\t\t'bold': {\n\t\t\t// **strong**\n\t\t\t// __strong__\n\n\t\t\t// allow one nested instance of italic text using the same delimiter\n\t\t\tpattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^..)[\\s\\S]+(?=..$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\*\\*|__/\n\t\t\t}\n\t\t},\n\t\t'italic': {\n\t\t\t// *em*\n\t\t\t// _em_\n\n\t\t\t// allow one nested instance of bold text using the same delimiter\n\t\t\tpattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^.)[\\s\\S]+(?=.$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'punctuation': /[*_]/\n\t\t\t}\n\t\t},\n\t\t'strike': {\n\t\t\t// ~~strike through~~\n\t\t\t// ~strike~\n\t\t\t// eslint-disable-next-line regexp/strict\n\t\t\tpattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'punctuation': /~~?/\n\t\t\t}\n\t\t},\n\t\t'code-snippet': {\n\t\t\t// `code`\n\t\t\t// ``code``\n\t\t\tpattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: ['code', 'keyword']\n\t\t},\n\t\t'url': {\n\t\t\t// [example](http://example.com \"Optional title\")\n\t\t\t// [example][id]\n\t\t\t// [example] [id]\n\t\t\tpattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'operator': /^!/,\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^\\[)[^\\]]+(?=\\])/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'variable': {\n\t\t\t\t\tpattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'url': {\n\t\t\t\t\tpattern: /(^\\]\\()[^\\s)]+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n\t\t['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n\t\t\tif (token !== inside) {\n\t\t\t\tPrism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n\t\t\t}\n\t\t});\n\t});\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tif (env.language !== 'markdown' && env.language !== 'md') {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction walkTokens(tokens) {\n\t\t\tif (!tokens || typeof tokens === 'string') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, l = tokens.length; i < l; i++) {\n\t\t\t\tvar token = tokens[i];\n\n\t\t\t\tif (token.type !== 'code') {\n\t\t\t\t\twalkTokens(token.content);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n\t\t\t\t * is optional. But the grammar is defined so that there is only one case we have to handle:\n\t\t\t\t *\n\t\t\t\t * token.content = [\n\t\t\t\t *     <span class=\"punctuation\">```</span>,\n\t\t\t\t *     <span class=\"code-language\">xxxx</span>,\n\t\t\t\t *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n\t\t\t\t *     <span class=\"code-block\">...</span>,\n\t\t\t\t *     '\\n', // exactly one new lines again\n\t\t\t\t *     <span class=\"punctuation\">```</span>\n\t\t\t\t * ];\n\t\t\t\t */\n\n\t\t\t\tvar codeLang = token.content[1];\n\t\t\t\tvar codeBlock = token.content[3];\n\n\t\t\t\tif (codeLang && codeBlock &&\n\t\t\t\t\tcodeLang.type === 'code-language' && codeBlock.type === 'code-block' &&\n\t\t\t\t\ttypeof codeLang.content === 'string') {\n\n\t\t\t\t\t// this might be a language that Prism does not support\n\n\t\t\t\t\t// do some replacements to support C++, C#, and F#\n\t\t\t\t\tvar lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp');\n\t\t\t\t\t// only use the first word\n\t\t\t\t\tlang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n\t\t\t\t\tvar alias = 'language-' + lang;\n\n\t\t\t\t\t// add alias\n\t\t\t\t\tif (!codeBlock.alias) {\n\t\t\t\t\t\tcodeBlock.alias = [alias];\n\t\t\t\t\t} else if (typeof codeBlock.alias === 'string') {\n\t\t\t\t\t\tcodeBlock.alias = [codeBlock.alias, alias];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcodeBlock.alias.push(alias);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twalkTokens(env.tokens);\n\t});\n\n\tPrism.hooks.add('wrap', function (env) {\n\t\tif (env.type !== 'code-block') {\n\t\t\treturn;\n\t\t}\n\n\t\tvar codeLang = '';\n\t\tfor (var i = 0, l = env.classes.length; i < l; i++) {\n\t\t\tvar cls = env.classes[i];\n\t\t\tvar match = /language-(.+)/.exec(cls);\n\t\t\tif (match) {\n\t\t\t\tcodeLang = match[1];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tvar grammar = Prism.languages[codeLang];\n\n\t\tif (!grammar) {\n\t\t\tif (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n\t\t\t\tvar id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n\t\t\t\tenv.attributes['id'] = id;\n\n\t\t\t\tPrism.plugins.autoloader.loadLanguages(codeLang, function () {\n\t\t\t\t\tvar ele = document.getElementById(id);\n\t\t\t\t\tif (ele) {\n\t\t\t\t\t\tele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tenv.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n\t\t}\n\t});\n\n\tvar tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n\n\t/**\n\t * A list of known entity names.\n\t *\n\t * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n\t *\n\t * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n\t */\n\tvar KNOWN_ENTITY_NAMES = {\n\t\t'amp': '&',\n\t\t'lt': '<',\n\t\t'gt': '>',\n\t\t'quot': '\"',\n\t};\n\n\t// IE 11 doesn't support `String.fromCodePoint`\n\tvar fromCodePoint = String.fromCodePoint || String.fromCharCode;\n\n\t/**\n\t * Returns the text content of a given HTML source code string.\n\t *\n\t * @param {string} html\n\t * @returns {string}\n\t */\n\tfunction textContent(html) {\n\t\t// remove all tags\n\t\tvar text = html.replace(tagPattern, '');\n\n\t\t// decode known entities\n\t\ttext = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n\t\t\tcode = code.toLowerCase();\n\n\t\t\tif (code[0] === '#') {\n\t\t\t\tvar value;\n\t\t\t\tif (code[1] === 'x') {\n\t\t\t\t\tvalue = parseInt(code.slice(2), 16);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = Number(code.slice(1));\n\t\t\t\t}\n\n\t\t\t\treturn fromCodePoint(value);\n\t\t\t} else {\n\t\t\t\tvar known = KNOWN_ENTITY_NAMES[code];\n\t\t\t\tif (known) {\n\t\t\t\t\treturn known;\n\t\t\t\t}\n\n\t\t\t\t// unable to decode\n\t\t\t\treturn m;\n\t\t\t}\n\t\t});\n\n\t\treturn text;\n\t}\n\n\tPrism.languages.md = Prism.languages.markdown;\n\n}(Prism));\n","Prism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n","export function deepCompareStrict(a, b) {\n    const typeofa = typeof a;\n    if (typeofa !== typeof b) {\n        return false;\n    }\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b)) {\n            return false;\n        }\n        const length = a.length;\n        if (length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < length; i++) {\n            if (!deepCompareStrict(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (typeofa === 'object') {\n        if (!a || !b) {\n            return a === b;\n        }\n        const aKeys = Object.keys(a);\n        const bKeys = Object.keys(b);\n        const length = aKeys.length;\n        if (length !== bKeys.length) {\n            return false;\n        }\n        for (const k of aKeys) {\n            if (!deepCompareStrict(a[k], b[k])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return a === b;\n}\n","export function encodePointer(p) {\n    return encodeURI(escapePointer(p));\n}\nexport function escapePointer(p) {\n    return p.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","import { encodePointer } from './pointer.js';\nexport const schemaKeyword = {\n    additionalItems: true,\n    unevaluatedItems: true,\n    items: true,\n    contains: true,\n    additionalProperties: true,\n    unevaluatedProperties: true,\n    propertyNames: true,\n    not: true,\n    if: true,\n    then: true,\n    else: true\n};\nexport const schemaArrayKeyword = {\n    prefixItems: true,\n    items: true,\n    allOf: true,\n    anyOf: true,\n    oneOf: true\n};\nexport const schemaMapKeyword = {\n    $defs: true,\n    definitions: true,\n    properties: true,\n    patternProperties: true,\n    dependentSchemas: true\n};\nexport const ignoredKeyword = {\n    id: true,\n    $id: true,\n    $ref: true,\n    $schema: true,\n    $anchor: true,\n    $vocabulary: true,\n    $comment: true,\n    default: true,\n    enum: true,\n    const: true,\n    required: true,\n    type: true,\n    maximum: true,\n    minimum: true,\n    exclusiveMaximum: true,\n    exclusiveMinimum: true,\n    multipleOf: true,\n    maxLength: true,\n    minLength: true,\n    pattern: true,\n    format: true,\n    maxItems: true,\n    minItems: true,\n    uniqueItems: true,\n    maxProperties: true,\n    minProperties: true\n};\nexport let initialBaseURI = typeof self !== 'undefined' &&\n    self.location &&\n    self.location.origin !== 'null'\n    ?\n        new URL(self.location.origin + self.location.pathname + location.search)\n    : new URL('https://github.com/cfworker');\nexport function dereference(schema, lookup = Object.create(null), baseURI = initialBaseURI, basePointer = '') {\n    if (schema && typeof schema === 'object' && !Array.isArray(schema)) {\n        const id = schema.$id || schema.id;\n        if (id) {\n            const url = new URL(id, baseURI.href);\n            if (url.hash.length > 1) {\n                lookup[url.href] = schema;\n            }\n            else {\n                url.hash = '';\n                if (basePointer === '') {\n                    baseURI = url;\n                }\n                else {\n                    dereference(schema, lookup, baseURI);\n                }\n            }\n        }\n    }\n    else if (schema !== true && schema !== false) {\n        return lookup;\n    }\n    const schemaURI = baseURI.href + (basePointer ? '#' + basePointer : '');\n    if (lookup[schemaURI] !== undefined) {\n        throw new Error(`Duplicate schema URI \"${schemaURI}\".`);\n    }\n    lookup[schemaURI] = schema;\n    if (schema === true || schema === false) {\n        return lookup;\n    }\n    if (schema.__absolute_uri__ === undefined) {\n        Object.defineProperty(schema, '__absolute_uri__', {\n            enumerable: false,\n            value: schemaURI\n        });\n    }\n    if (schema.$ref && schema.__absolute_ref__ === undefined) {\n        const url = new URL(schema.$ref, baseURI.href);\n        url.hash = url.hash;\n        Object.defineProperty(schema, '__absolute_ref__', {\n            enumerable: false,\n            value: url.href\n        });\n    }\n    if (schema.$recursiveRef && schema.__absolute_recursive_ref__ === undefined) {\n        const url = new URL(schema.$recursiveRef, baseURI.href);\n        url.hash = url.hash;\n        Object.defineProperty(schema, '__absolute_recursive_ref__', {\n            enumerable: false,\n            value: url.href\n        });\n    }\n    if (schema.$anchor) {\n        const url = new URL('#' + schema.$anchor, baseURI.href);\n        lookup[url.href] = schema;\n    }\n    for (let key in schema) {\n        if (ignoredKeyword[key]) {\n            continue;\n        }\n        const keyBase = `${basePointer}/${encodePointer(key)}`;\n        const subSchema = schema[key];\n        if (Array.isArray(subSchema)) {\n            if (schemaArrayKeyword[key]) {\n                const length = subSchema.length;\n                for (let i = 0; i < length; i++) {\n                    dereference(subSchema[i], lookup, baseURI, `${keyBase}/${i}`);\n                }\n            }\n        }\n        else if (schemaMapKeyword[key]) {\n            for (let subKey in subSchema) {\n                dereference(subSchema[subKey], lookup, baseURI, `${keyBase}/${encodePointer(subKey)}`);\n            }\n        }\n        else {\n            dereference(subSchema, lookup, baseURI, keyBase);\n        }\n    }\n    return lookup;\n}\n","const DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nconst HOSTNAME = /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i;\nconst URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nconst URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\nconst URL_ = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nconst UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nconst JSON_POINTER = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nconst JSON_POINTER_URI_FRAGMENT = /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nconst RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\nconst FASTDATE = /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/;\nconst FASTTIME = /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nconst FASTDATETIME = /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i;\nconst FASTURIREFERENCE = /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i;\nconst EMAIL = (input) => {\n    if (input[0] === '\"')\n        return false;\n    const [name, host, ...rest] = input.split('@');\n    if (!name ||\n        !host ||\n        rest.length !== 0 ||\n        name.length > 64 ||\n        host.length > 253)\n        return false;\n    if (name[0] === '.' || name.endsWith('.') || name.includes('..'))\n        return false;\n    if (!/^[a-z0-9.-]+$/i.test(host) ||\n        !/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+$/i.test(name))\n        return false;\n    return host\n        .split('.')\n        .every(part => /^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$/i.test(part));\n};\nconst IPV4 = /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/;\nconst IPV6 = /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i;\nconst DURATION = (input) => input.length > 1 &&\n    input.length < 80 &&\n    (/^P\\d+([.,]\\d+)?W$/.test(input) ||\n        (/^P[\\dYMDTHS]*(\\d[.,]\\d+)?[YMDHS]$/.test(input) &&\n            /^P([.,\\d]+Y)?([.,\\d]+M)?([.,\\d]+D)?(T([.,\\d]+H)?([.,\\d]+M)?([.,\\d]+S)?)?$/.test(input)));\nfunction bind(r) {\n    return r.test.bind(r);\n}\nexport const fullFormat = {\n    date,\n    time: time.bind(undefined, false),\n    'date-time': date_time,\n    duration: DURATION,\n    uri,\n    'uri-reference': bind(URIREF),\n    'uri-template': bind(URITEMPLATE),\n    url: bind(URL_),\n    email: EMAIL,\n    hostname: bind(HOSTNAME),\n    ipv4: bind(IPV4),\n    ipv6: bind(IPV6),\n    regex: regex,\n    uuid: bind(UUID),\n    'json-pointer': bind(JSON_POINTER),\n    'json-pointer-uri-fragment': bind(JSON_POINTER_URI_FRAGMENT),\n    'relative-json-pointer': bind(RELATIVE_JSON_POINTER)\n};\nexport const fastFormat = {\n    ...fullFormat,\n    date: bind(FASTDATE),\n    time: bind(FASTTIME),\n    'date-time': bind(FASTDATETIME),\n    'uri-reference': bind(FASTURIREFERENCE)\n};\nfunction isLeapYear(year) {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nfunction date(str) {\n    const matches = str.match(DATE);\n    if (!matches)\n        return false;\n    const year = +matches[1];\n    const month = +matches[2];\n    const day = +matches[3];\n    return (month >= 1 &&\n        month <= 12 &&\n        day >= 1 &&\n        day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]));\n}\nfunction time(full, str) {\n    const matches = str.match(TIME);\n    if (!matches)\n        return false;\n    const hour = +matches[1];\n    const minute = +matches[2];\n    const second = +matches[3];\n    const timeZone = !!matches[5];\n    return (((hour <= 23 && minute <= 59 && second <= 59) ||\n        (hour == 23 && minute == 59 && second == 60)) &&\n        (!full || timeZone));\n}\nconst DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n    const dateTime = str.split(DATE_TIME_SEPARATOR);\n    return dateTime.length == 2 && date(dateTime[0]) && time(true, dateTime[1]);\n}\nconst NOT_URI_FRAGMENT = /\\/|:/;\nconst URI_PATTERN = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nfunction uri(str) {\n    return NOT_URI_FRAGMENT.test(str) && URI_PATTERN.test(str);\n}\nconst Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n    if (Z_ANCHOR.test(str))\n        return false;\n    try {\n        new RegExp(str, 'u');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n","export function ucs2length(s) {\n    let result = 0;\n    let length = s.length;\n    let index = 0;\n    let charCode;\n    while (index < length) {\n        result++;\n        charCode = s.charCodeAt(index++);\n        if (charCode >= 0xd800 && charCode <= 0xdbff && index < length) {\n            charCode = s.charCodeAt(index);\n            if ((charCode & 0xfc00) == 0xdc00) {\n                index++;\n            }\n        }\n    }\n    return result;\n}\n","import { deepCompareStrict } from './deep-compare-strict.js';\nimport { dereference } from './dereference.js';\nimport { fastFormat } from './format.js';\nimport { encodePointer } from './pointer.js';\nimport { ucs2length } from './ucs2-length.js';\nexport function validate(instance, schema, draft = '2019-09', lookup = dereference(schema), shortCircuit = true, recursiveAnchor = null, instanceLocation = '#', schemaLocation = '#', evaluated = Object.create(null)) {\n    if (schema === true) {\n        return { valid: true, errors: [] };\n    }\n    if (schema === false) {\n        return {\n            valid: false,\n            errors: [\n                {\n                    instanceLocation,\n                    keyword: 'false',\n                    keywordLocation: instanceLocation,\n                    error: 'False boolean schema.'\n                }\n            ]\n        };\n    }\n    const rawInstanceType = typeof instance;\n    let instanceType;\n    switch (rawInstanceType) {\n        case 'boolean':\n        case 'number':\n        case 'string':\n            instanceType = rawInstanceType;\n            break;\n        case 'object':\n            if (instance === null) {\n                instanceType = 'null';\n            }\n            else if (Array.isArray(instance)) {\n                instanceType = 'array';\n            }\n            else {\n                instanceType = 'object';\n            }\n            break;\n        default:\n            throw new Error(`Instances of \"${rawInstanceType}\" type are not supported.`);\n    }\n    const { $ref, $recursiveRef, $recursiveAnchor, type: $type, const: $const, enum: $enum, required: $required, not: $not, anyOf: $anyOf, allOf: $allOf, oneOf: $oneOf, if: $if, then: $then, else: $else, format: $format, properties: $properties, patternProperties: $patternProperties, additionalProperties: $additionalProperties, unevaluatedProperties: $unevaluatedProperties, minProperties: $minProperties, maxProperties: $maxProperties, propertyNames: $propertyNames, dependentRequired: $dependentRequired, dependentSchemas: $dependentSchemas, dependencies: $dependencies, prefixItems: $prefixItems, items: $items, additionalItems: $additionalItems, unevaluatedItems: $unevaluatedItems, contains: $contains, minContains: $minContains, maxContains: $maxContains, minItems: $minItems, maxItems: $maxItems, uniqueItems: $uniqueItems, minimum: $minimum, maximum: $maximum, exclusiveMinimum: $exclusiveMinimum, exclusiveMaximum: $exclusiveMaximum, multipleOf: $multipleOf, minLength: $minLength, maxLength: $maxLength, pattern: $pattern, __absolute_ref__, __absolute_recursive_ref__ } = schema;\n    const errors = [];\n    if ($recursiveAnchor === true && recursiveAnchor === null) {\n        recursiveAnchor = schema;\n    }\n    if ($recursiveRef === '#') {\n        const refSchema = recursiveAnchor === null\n            ? lookup[__absolute_recursive_ref__]\n            : recursiveAnchor;\n        const keywordLocation = `${schemaLocation}/$recursiveRef`;\n        const result = validate(instance, recursiveAnchor === null ? schema : recursiveAnchor, draft, lookup, shortCircuit, refSchema, instanceLocation, keywordLocation, evaluated);\n        if (!result.valid) {\n            errors.push({\n                instanceLocation,\n                keyword: '$recursiveRef',\n                keywordLocation,\n                error: 'A subschema had errors.'\n            }, ...result.errors);\n        }\n    }\n    if ($ref !== undefined) {\n        const uri = __absolute_ref__ || $ref;\n        const refSchema = lookup[uri];\n        if (refSchema === undefined) {\n            let message = `Unresolved $ref \"${$ref}\".`;\n            if (__absolute_ref__ && __absolute_ref__ !== $ref) {\n                message += `  Absolute URI \"${__absolute_ref__}\".`;\n            }\n            message += `\\nKnown schemas:\\n- ${Object.keys(lookup).join('\\n- ')}`;\n            throw new Error(message);\n        }\n        const keywordLocation = `${schemaLocation}/$ref`;\n        const result = validate(instance, refSchema, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, keywordLocation, evaluated);\n        if (!result.valid) {\n            errors.push({\n                instanceLocation,\n                keyword: '$ref',\n                keywordLocation,\n                error: 'A subschema had errors.'\n            }, ...result.errors);\n        }\n        if (draft === '4' || draft === '7') {\n            return { valid: errors.length === 0, errors };\n        }\n    }\n    if (Array.isArray($type)) {\n        let length = $type.length;\n        let valid = false;\n        for (let i = 0; i < length; i++) {\n            if (instanceType === $type[i] ||\n                ($type[i] === 'integer' &&\n                    instanceType === 'number' &&\n                    instance % 1 === 0 &&\n                    instance === instance)) {\n                valid = true;\n                break;\n            }\n        }\n        if (!valid) {\n            errors.push({\n                instanceLocation,\n                keyword: 'type',\n                keywordLocation: `${schemaLocation}/type`,\n                error: `Instance type \"${instanceType}\" is invalid. Expected \"${$type.join('\", \"')}\".`\n            });\n        }\n    }\n    else if ($type === 'integer') {\n        if (instanceType !== 'number' || instance % 1 || instance !== instance) {\n            errors.push({\n                instanceLocation,\n                keyword: 'type',\n                keywordLocation: `${schemaLocation}/type`,\n                error: `Instance type \"${instanceType}\" is invalid. Expected \"${$type}\".`\n            });\n        }\n    }\n    else if ($type !== undefined && instanceType !== $type) {\n        errors.push({\n            instanceLocation,\n            keyword: 'type',\n            keywordLocation: `${schemaLocation}/type`,\n            error: `Instance type \"${instanceType}\" is invalid. Expected \"${$type}\".`\n        });\n    }\n    if ($const !== undefined) {\n        if (instanceType === 'object' || instanceType === 'array') {\n            if (!deepCompareStrict(instance, $const)) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'const',\n                    keywordLocation: `${schemaLocation}/const`,\n                    error: `Instance does not match ${JSON.stringify($const)}.`\n                });\n            }\n        }\n        else if (instance !== $const) {\n            errors.push({\n                instanceLocation,\n                keyword: 'const',\n                keywordLocation: `${schemaLocation}/const`,\n                error: `Instance does not match ${JSON.stringify($const)}.`\n            });\n        }\n    }\n    if ($enum !== undefined) {\n        if (instanceType === 'object' || instanceType === 'array') {\n            if (!$enum.some(value => deepCompareStrict(instance, value))) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'enum',\n                    keywordLocation: `${schemaLocation}/enum`,\n                    error: `Instance does not match any of ${JSON.stringify($enum)}.`\n                });\n            }\n        }\n        else if (!$enum.some(value => instance === value)) {\n            errors.push({\n                instanceLocation,\n                keyword: 'enum',\n                keywordLocation: `${schemaLocation}/enum`,\n                error: `Instance does not match any of ${JSON.stringify($enum)}.`\n            });\n        }\n    }\n    if ($not !== undefined) {\n        const keywordLocation = `${schemaLocation}/not`;\n        const result = validate(instance, $not, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, keywordLocation);\n        if (result.valid) {\n            errors.push({\n                instanceLocation,\n                keyword: 'not',\n                keywordLocation,\n                error: 'Instance matched \"not\" schema.'\n            });\n        }\n    }\n    let subEvaluateds = [];\n    if ($anyOf !== undefined) {\n        const keywordLocation = `${schemaLocation}/anyOf`;\n        const errorsLength = errors.length;\n        let anyValid = false;\n        for (let i = 0; i < $anyOf.length; i++) {\n            const subSchema = $anyOf[i];\n            const subEvaluated = Object.create(evaluated);\n            const result = validate(instance, subSchema, draft, lookup, shortCircuit, $recursiveAnchor === true ? recursiveAnchor : null, instanceLocation, `${keywordLocation}/${i}`, subEvaluated);\n            errors.push(...result.errors);\n            anyValid = anyValid || result.valid;\n            if (result.valid) {\n                subEvaluateds.push(subEvaluated);\n            }\n        }\n        if (anyValid) {\n            errors.length = errorsLength;\n        }\n        else {\n            errors.splice(errorsLength, 0, {\n                instanceLocation,\n                keyword: 'anyOf',\n                keywordLocation,\n                error: 'Instance does not match any subschemas.'\n            });\n        }\n    }\n    if ($allOf !== undefined) {\n        const keywordLocation = `${schemaLocation}/allOf`;\n        const errorsLength = errors.length;\n        let allValid = true;\n        for (let i = 0; i < $allOf.length; i++) {\n            const subSchema = $allOf[i];\n            const subEvaluated = Object.create(evaluated);\n            const result = validate(instance, subSchema, draft, lookup, shortCircuit, $recursiveAnchor === true ? recursiveAnchor : null, instanceLocation, `${keywordLocation}/${i}`, subEvaluated);\n            errors.push(...result.errors);\n            allValid = allValid && result.valid;\n            if (result.valid) {\n                subEvaluateds.push(subEvaluated);\n            }\n        }\n        if (allValid) {\n            errors.length = errorsLength;\n        }\n        else {\n            errors.splice(errorsLength, 0, {\n                instanceLocation,\n                keyword: 'allOf',\n                keywordLocation,\n                error: `Instance does not match every subschema.`\n            });\n        }\n    }\n    if ($oneOf !== undefined) {\n        const keywordLocation = `${schemaLocation}/oneOf`;\n        const errorsLength = errors.length;\n        const matches = $oneOf.filter((subSchema, i) => {\n            const subEvaluated = Object.create(evaluated);\n            const result = validate(instance, subSchema, draft, lookup, shortCircuit, $recursiveAnchor === true ? recursiveAnchor : null, instanceLocation, `${keywordLocation}/${i}`, subEvaluated);\n            errors.push(...result.errors);\n            if (result.valid) {\n                subEvaluateds.push(subEvaluated);\n            }\n            return result.valid;\n        }).length;\n        if (matches === 1) {\n            errors.length = errorsLength;\n        }\n        else {\n            errors.splice(errorsLength, 0, {\n                instanceLocation,\n                keyword: 'oneOf',\n                keywordLocation,\n                error: `Instance does not match exactly one subschema (${matches} matches).`\n            });\n        }\n    }\n    if (instanceType === 'object' || instanceType === 'array') {\n        Object.assign(evaluated, ...subEvaluateds);\n    }\n    if ($if !== undefined) {\n        const keywordLocation = `${schemaLocation}/if`;\n        const conditionResult = validate(instance, $if, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, keywordLocation, evaluated).valid;\n        if (conditionResult) {\n            if ($then !== undefined) {\n                const thenResult = validate(instance, $then, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${schemaLocation}/then`, evaluated);\n                if (!thenResult.valid) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'if',\n                        keywordLocation,\n                        error: `Instance does not match \"then\" schema.`\n                    }, ...thenResult.errors);\n                }\n            }\n        }\n        else if ($else !== undefined) {\n            const elseResult = validate(instance, $else, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${schemaLocation}/else`, evaluated);\n            if (!elseResult.valid) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'if',\n                    keywordLocation,\n                    error: `Instance does not match \"else\" schema.`\n                }, ...elseResult.errors);\n            }\n        }\n    }\n    if (instanceType === 'object') {\n        if ($required !== undefined) {\n            for (const key of $required) {\n                if (!(key in instance)) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'required',\n                        keywordLocation: `${schemaLocation}/required`,\n                        error: `Instance does not have required property \"${key}\".`\n                    });\n                }\n            }\n        }\n        const keys = Object.keys(instance);\n        if ($minProperties !== undefined && keys.length < $minProperties) {\n            errors.push({\n                instanceLocation,\n                keyword: 'minProperties',\n                keywordLocation: `${schemaLocation}/minProperties`,\n                error: `Instance does not have at least ${$minProperties} properties.`\n            });\n        }\n        if ($maxProperties !== undefined && keys.length > $maxProperties) {\n            errors.push({\n                instanceLocation,\n                keyword: 'maxProperties',\n                keywordLocation: `${schemaLocation}/maxProperties`,\n                error: `Instance does not have at least ${$maxProperties} properties.`\n            });\n        }\n        if ($propertyNames !== undefined) {\n            const keywordLocation = `${schemaLocation}/propertyNames`;\n            for (const key in instance) {\n                const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                const result = validate(key, $propertyNames, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, keywordLocation);\n                if (!result.valid) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'propertyNames',\n                        keywordLocation,\n                        error: `Property name \"${key}\" does not match schema.`\n                    }, ...result.errors);\n                }\n            }\n        }\n        if ($dependentRequired !== undefined) {\n            const keywordLocation = `${schemaLocation}/dependantRequired`;\n            for (const key in $dependentRequired) {\n                if (key in instance) {\n                    const required = $dependentRequired[key];\n                    for (const dependantKey of required) {\n                        if (!(dependantKey in instance)) {\n                            errors.push({\n                                instanceLocation,\n                                keyword: 'dependentRequired',\n                                keywordLocation,\n                                error: `Instance has \"${key}\" but does not have \"${dependantKey}\".`\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if ($dependentSchemas !== undefined) {\n            for (const key in $dependentSchemas) {\n                const keywordLocation = `${schemaLocation}/dependentSchemas`;\n                if (key in instance) {\n                    const result = validate(instance, $dependentSchemas[key], draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${keywordLocation}/${encodePointer(key)}`, evaluated);\n                    if (!result.valid) {\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'dependentSchemas',\n                            keywordLocation,\n                            error: `Instance has \"${key}\" but does not match dependant schema.`\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n        if ($dependencies !== undefined) {\n            const keywordLocation = `${schemaLocation}/dependencies`;\n            for (const key in $dependencies) {\n                if (key in instance) {\n                    const propsOrSchema = $dependencies[key];\n                    if (Array.isArray(propsOrSchema)) {\n                        for (const dependantKey of propsOrSchema) {\n                            if (!(dependantKey in instance)) {\n                                errors.push({\n                                    instanceLocation,\n                                    keyword: 'dependencies',\n                                    keywordLocation,\n                                    error: `Instance has \"${key}\" but does not have \"${dependantKey}\".`\n                                });\n                            }\n                        }\n                    }\n                    else {\n                        const result = validate(instance, propsOrSchema, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${keywordLocation}/${encodePointer(key)}`);\n                        if (!result.valid) {\n                            errors.push({\n                                instanceLocation,\n                                keyword: 'dependencies',\n                                keywordLocation,\n                                error: `Instance has \"${key}\" but does not match dependant schema.`\n                            }, ...result.errors);\n                        }\n                    }\n                }\n            }\n        }\n        const thisEvaluated = Object.create(null);\n        let stop = false;\n        if ($properties !== undefined) {\n            const keywordLocation = `${schemaLocation}/properties`;\n            for (const key in $properties) {\n                if (!(key in instance)) {\n                    continue;\n                }\n                const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                const result = validate(instance[key], $properties[key], draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, `${keywordLocation}/${encodePointer(key)}`);\n                if (result.valid) {\n                    evaluated[key] = thisEvaluated[key] = true;\n                }\n                else {\n                    stop = shortCircuit;\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'properties',\n                        keywordLocation,\n                        error: `Property \"${key}\" does not match schema.`\n                    }, ...result.errors);\n                    if (stop)\n                        break;\n                }\n            }\n        }\n        if (!stop && $patternProperties !== undefined) {\n            const keywordLocation = `${schemaLocation}/patternProperties`;\n            for (const pattern in $patternProperties) {\n                const regex = new RegExp(pattern, 'u');\n                const subSchema = $patternProperties[pattern];\n                for (const key in instance) {\n                    if (!regex.test(key)) {\n                        continue;\n                    }\n                    const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                    const result = validate(instance[key], subSchema, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, `${keywordLocation}/${encodePointer(pattern)}`);\n                    if (result.valid) {\n                        evaluated[key] = thisEvaluated[key] = true;\n                    }\n                    else {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'patternProperties',\n                            keywordLocation,\n                            error: `Property \"${key}\" matches pattern \"${pattern}\" but does not match associated schema.`\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n        if (!stop && $additionalProperties !== undefined) {\n            const keywordLocation = `${schemaLocation}/additionalProperties`;\n            for (const key in instance) {\n                if (thisEvaluated[key]) {\n                    continue;\n                }\n                const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                const result = validate(instance[key], $additionalProperties, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, keywordLocation);\n                if (result.valid) {\n                    evaluated[key] = true;\n                }\n                else {\n                    stop = shortCircuit;\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'additionalProperties',\n                        keywordLocation,\n                        error: `Property \"${key}\" does not match additional properties schema.`\n                    }, ...result.errors);\n                }\n            }\n        }\n        else if (!stop && $unevaluatedProperties !== undefined) {\n            const keywordLocation = `${schemaLocation}/unevaluatedProperties`;\n            for (const key in instance) {\n                if (!evaluated[key]) {\n                    const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                    const result = validate(instance[key], $unevaluatedProperties, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, keywordLocation);\n                    if (result.valid) {\n                        evaluated[key] = true;\n                    }\n                    else {\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'unevaluatedProperties',\n                            keywordLocation,\n                            error: `Property \"${key}\" does not match unevaluated properties schema.`\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n    }\n    else if (instanceType === 'array') {\n        if ($maxItems !== undefined && instance.length > $maxItems) {\n            errors.push({\n                instanceLocation,\n                keyword: 'maxItems',\n                keywordLocation: `${schemaLocation}/maxItems`,\n                error: `Array has too many items (${instance.length} > ${$maxItems}).`\n            });\n        }\n        if ($minItems !== undefined && instance.length < $minItems) {\n            errors.push({\n                instanceLocation,\n                keyword: 'minItems',\n                keywordLocation: `${schemaLocation}/minItems`,\n                error: `Array has too few items (${instance.length} < ${$minItems}).`\n            });\n        }\n        const length = instance.length;\n        let i = 0;\n        let stop = false;\n        if ($prefixItems !== undefined) {\n            const keywordLocation = `${schemaLocation}/prefixItems`;\n            const length2 = Math.min($prefixItems.length, length);\n            for (; i < length2; i++) {\n                const result = validate(instance[i], $prefixItems[i], draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, `${keywordLocation}/${i}`);\n                evaluated[i] = true;\n                if (!result.valid) {\n                    stop = shortCircuit;\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'prefixItems',\n                        keywordLocation,\n                        error: `Items did not match schema.`\n                    }, ...result.errors);\n                    if (stop)\n                        break;\n                }\n            }\n        }\n        if ($items !== undefined) {\n            const keywordLocation = `${schemaLocation}/items`;\n            if (Array.isArray($items)) {\n                const length2 = Math.min($items.length, length);\n                for (; i < length2; i++) {\n                    const result = validate(instance[i], $items[i], draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, `${keywordLocation}/${i}`);\n                    evaluated[i] = true;\n                    if (!result.valid) {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'items',\n                            keywordLocation,\n                            error: `Items did not match schema.`\n                        }, ...result.errors);\n                        if (stop)\n                            break;\n                    }\n                }\n            }\n            else {\n                for (; i < length; i++) {\n                    const result = validate(instance[i], $items, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, keywordLocation);\n                    evaluated[i] = true;\n                    if (!result.valid) {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'items',\n                            keywordLocation,\n                            error: `Items did not match schema.`\n                        }, ...result.errors);\n                        if (stop)\n                            break;\n                    }\n                }\n            }\n            if (!stop && $additionalItems !== undefined) {\n                const keywordLocation = `${schemaLocation}/additionalItems`;\n                for (; i < length; i++) {\n                    const result = validate(instance[i], $additionalItems, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, keywordLocation);\n                    evaluated[i] = true;\n                    if (!result.valid) {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'additionalItems',\n                            keywordLocation,\n                            error: `Items did not match additional items schema.`\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n        if ($contains !== undefined) {\n            if (length === 0 && $minContains === undefined) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'contains',\n                    keywordLocation: `${schemaLocation}/contains`,\n                    error: `Array is empty. It must contain at least one item matching the schema.`\n                });\n            }\n            else if ($minContains !== undefined && length < $minContains) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'minContains',\n                    keywordLocation: `${schemaLocation}/minContains`,\n                    error: `Array has less items (${length}) than minContains (${$minContains}).`\n                });\n            }\n            else {\n                const keywordLocation = `${schemaLocation}/contains`;\n                const errorsLength = errors.length;\n                let contained = 0;\n                for (let j = 0; j < length; j++) {\n                    const result = validate(instance[j], $contains, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${j}`, keywordLocation);\n                    if (result.valid) {\n                        evaluated[j] = true;\n                        contained++;\n                    }\n                    else {\n                        errors.push(...result.errors);\n                    }\n                }\n                if (contained >= ($minContains || 0)) {\n                    errors.length = errorsLength;\n                }\n                if ($minContains === undefined &&\n                    $maxContains === undefined &&\n                    contained === 0) {\n                    errors.splice(errorsLength, 0, {\n                        instanceLocation,\n                        keyword: 'contains',\n                        keywordLocation,\n                        error: `Array does not contain item matching schema.`\n                    });\n                }\n                else if ($minContains !== undefined && contained < $minContains) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'minContains',\n                        keywordLocation: `${schemaLocation}/minContains`,\n                        error: `Array must contain at least ${$minContains} items matching schema. Only ${contained} items were found.`\n                    });\n                }\n                else if ($maxContains !== undefined && contained > $maxContains) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'maxContains',\n                        keywordLocation: `${schemaLocation}/maxContains`,\n                        error: `Array may contain at most ${$maxContains} items matching schema. ${contained} items were found.`\n                    });\n                }\n            }\n        }\n        if (!stop && $unevaluatedItems !== undefined) {\n            const keywordLocation = `${schemaLocation}/unevaluatedItems`;\n            for (i; i < length; i++) {\n                if (evaluated[i]) {\n                    continue;\n                }\n                const result = validate(instance[i], $unevaluatedItems, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, keywordLocation);\n                evaluated[i] = true;\n                if (!result.valid) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'unevaluatedItems',\n                        keywordLocation,\n                        error: `Items did not match unevaluated items schema.`\n                    }, ...result.errors);\n                }\n            }\n        }\n        if ($uniqueItems) {\n            for (let j = 0; j < length; j++) {\n                const a = instance[j];\n                const ao = typeof a === 'object' && a !== null;\n                for (let k = 0; k < length; k++) {\n                    if (j === k) {\n                        continue;\n                    }\n                    const b = instance[k];\n                    const bo = typeof b === 'object' && b !== null;\n                    if (a === b || (ao && bo && deepCompareStrict(a, b))) {\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'uniqueItems',\n                            keywordLocation: `${schemaLocation}/uniqueItems`,\n                            error: `Duplicate items at indexes ${j} and ${k}.`\n                        });\n                        j = Number.MAX_SAFE_INTEGER;\n                        k = Number.MAX_SAFE_INTEGER;\n                    }\n                }\n            }\n        }\n    }\n    else if (instanceType === 'number') {\n        if (draft === '4') {\n            if ($minimum !== undefined &&\n                (($exclusiveMinimum === true && instance <= $minimum) ||\n                    instance < $minimum)) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'minimum',\n                    keywordLocation: `${schemaLocation}/minimum`,\n                    error: `${instance} is less than ${$exclusiveMinimum ? 'or equal to ' : ''} ${$minimum}.`\n                });\n            }\n            if ($maximum !== undefined &&\n                (($exclusiveMaximum === true && instance >= $maximum) ||\n                    instance > $maximum)) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'maximum',\n                    keywordLocation: `${schemaLocation}/maximum`,\n                    error: `${instance} is greater than ${$exclusiveMaximum ? 'or equal to ' : ''} ${$maximum}.`\n                });\n            }\n        }\n        else {\n            if ($minimum !== undefined && instance < $minimum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'minimum',\n                    keywordLocation: `${schemaLocation}/minimum`,\n                    error: `${instance} is less than ${$minimum}.`\n                });\n            }\n            if ($maximum !== undefined && instance > $maximum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'maximum',\n                    keywordLocation: `${schemaLocation}/maximum`,\n                    error: `${instance} is greater than ${$maximum}.`\n                });\n            }\n            if ($exclusiveMinimum !== undefined && instance <= $exclusiveMinimum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'exclusiveMinimum',\n                    keywordLocation: `${schemaLocation}/exclusiveMinimum`,\n                    error: `${instance} is less than ${$exclusiveMinimum}.`\n                });\n            }\n            if ($exclusiveMaximum !== undefined && instance >= $exclusiveMaximum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'exclusiveMaximum',\n                    keywordLocation: `${schemaLocation}/exclusiveMaximum`,\n                    error: `${instance} is greater than or equal to ${$exclusiveMaximum}.`\n                });\n            }\n        }\n        if ($multipleOf !== undefined) {\n            const remainder = instance % $multipleOf;\n            if (Math.abs(0 - remainder) >= 1.1920929e-7 &&\n                Math.abs($multipleOf - remainder) >= 1.1920929e-7) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'multipleOf',\n                    keywordLocation: `${schemaLocation}/multipleOf`,\n                    error: `${instance} is not a multiple of ${$multipleOf}.`\n                });\n            }\n        }\n    }\n    else if (instanceType === 'string') {\n        const length = $minLength === undefined && $maxLength === undefined\n            ? 0\n            : ucs2length(instance);\n        if ($minLength !== undefined && length < $minLength) {\n            errors.push({\n                instanceLocation,\n                keyword: 'minLength',\n                keywordLocation: `${schemaLocation}/minLength`,\n                error: `String is too short (${length} < ${$minLength}).`\n            });\n        }\n        if ($maxLength !== undefined && length > $maxLength) {\n            errors.push({\n                instanceLocation,\n                keyword: 'maxLength',\n                keywordLocation: `${schemaLocation}/maxLength`,\n                error: `String is too long (${length} > ${$maxLength}).`\n            });\n        }\n        if ($pattern !== undefined && !new RegExp($pattern, 'u').test(instance)) {\n            errors.push({\n                instanceLocation,\n                keyword: 'pattern',\n                keywordLocation: `${schemaLocation}/pattern`,\n                error: `String does not match pattern.`\n            });\n        }\n        if ($format !== undefined &&\n            fastFormat[$format] &&\n            !fastFormat[$format](instance)) {\n            errors.push({\n                instanceLocation,\n                keyword: 'format',\n                keywordLocation: `${schemaLocation}/format`,\n                error: `String does not match format \"${$format}\".`\n            });\n        }\n    }\n    return { valid: errors.length === 0, errors };\n}\n","import { dereference } from './dereference.js';\nimport { validate } from './validate.js';\nexport class Validator {\n    constructor(schema, draft = '2019-09', shortCircuit = true) {\n        this.schema = schema;\n        this.draft = draft;\n        this.shortCircuit = shortCircuit;\n        this.lookup = dereference(schema);\n    }\n    validate(instance) {\n        return validate(instance, this.schema, this.draft, this.lookup, this.shortCircuit);\n    }\n    addSchema(schema, id) {\n        if (id) {\n            schema = { ...schema, $id: id };\n        }\n        dereference(schema, this.lookup);\n    }\n}\n"],"names":["entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","Object","freeze","seal","create","apply","construct","Reflect","x","fun","thisValue","args","Func","arrayForEach","unapply","Array","prototype","forEach","arrayPop","pop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringToString","toString","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","objectHasOwnProperty","hasOwnProperty","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","arguments","length","_key","_len2","_key2","addToSet","set","array","transformCaseFunc","undefined","l","element","lcElement","cleanArray","index","clone","object","newObject","property","value","isArray","constructor","lookupGetter","prop","desc","get","fallbackValue","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","text","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","__proto__","NODE_TYPE","attribute","cdataSection","entityReference","entityNode","progressingInstruction","comment","document","documentType","documentFragment","notation","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","getAttribute","policyName","scriptUrl","console","warn","createDOMPurify","DOMPurify","root","version","removed","nodeType","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","createHTML","createScriptURL","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","node","removeChild","_","_removeAttribute","name","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","elm","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","_isBasicCustomElement","parentNode","childCount","i","childClone","__removalCount","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","attr","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","appendChild","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","purify","_getDefaults","async","breaks","extensions","gfm","pedantic","renderer","silent","tokenizer","walkTokens","_defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape$1","encode","unescapeTest","unescape","n","charAt","fromCharCode","parseInt","substring","caret","edit","regex","opt","obj","val","valSource","getRegex","cleanUrl","href","encodeURI","noopTest","exec","splitCells","tableRow","count","row","offset","str","escaped","curr","cells","split","shift","splice","rtrim","c","invert","suffLen","currChar","slice","findClosingBracket","b","level","outputLink","cap","link","raw","lexer","title","state","inLink","token","type","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","matchIndentInNode","indentInNode","join","_Tokenizer","options","rules","this","src","block","newline","code","codeBlockStyle","fences","lang","inline","anyPunctuation","heading","trimmed","depth","hr","blockquote","lines","inBlockquote","currentLines","currentRaw","currentText","top","blockTokens","lastToken","oldToken","newText","newToken","list","bull","isordered","ordered","start","loose","items","itemRegex","endsWithBlankLine","endEarly","itemContents","line","t","repeat","nextLine","blankLine","indent","trimStart","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","rawLine","istask","ischecked","task","checked","trimEnd","spacers","filter","hasMultipleLineBreaks","some","pre","def","r","headers","aligns","rows","item","header","align","cell","lheading","paragraph","escape","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","links","reflink","nolink","linkString","e","maskedSrc","prevChar","emStrongLDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","emStrongRDelimAst","emStrongRDelimUnd","lastIndex","lastCharLength","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","blockCode","bullet","_paragraph","blockText","_blockLabel","_tag","_comment","blockNormal","gfmTable","blockGfm","blockPedantic","inlineCode","inlineText","_punctuation","blockSkip","_inlineComment","_inlineLabel","reflinkSearch","inlineNormal","inlinePedantic","inlineGfm","inlineBreaks","normal","_Lexer","inlineQueue","gt","lex","next","lastParagraphClipped","leading","tabs","cutSrc","extTokenizer","space","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","charCodeAt","error","Error","keepPrevChar","keys","includes","lastIndexOf","emStrong","codespan","startInline","_Renderer","parser","langString","parse","parseInline","j","listitem","startAttr","itemBody","checkbox","unshift","tablecell","tablerow","k","strong","cleanHref","out","_TextRenderer","_Parser","textRenderer","anyToken","renderers","genericToken","ret","textToken","image","em","_Hooks","markdown","static","Set","Marked","__privateAdd","_xt_instances","defaults","setOptions","lexInline","Parser","Renderer","TextRenderer","Lexer","Tokenizer","Hooks","use","callback","values","concat","tableToken","listToken","childTokens","flat","pack","opts","ext","prevRenderer","extLevel","rendererProp","rendererFunc","useNewRenderer","tokenizerProp","tokenizerFunc","prevTokenizer","hooksProp","hooksFunc","prevHook","passThroughHooks","has","arg","Promise","resolve","then","packWalktokens","t_fn","convertRendererFunction","e_fn","parseMarkdown","origOpt","throwError","preprocess","processAllTokens","all","postprocess","catch","n_fn","onError","message","msg","reject","markedInstance","marked","getDefaults","mangle","startsWith","email","mangledEmail","mangleEmail","random","slugger","GithubSlugger","headings","gfmHeadingId","prefix","globalSlugs","headerIds","resetHeadings","id","slug","_self","WorkerGlobalScope","self","Prism","uniqueId","plainTextGrammar","manual","disableWorkerMessageHandler","util","Token","alias","o","objId","defineProperty","deepClone","visited","key","v","getLanguage","m","className","parentElement","setLanguage","language","classList","add","err","stack","scripts","isActive","defaultActivation","no","contains","languages","plain","plaintext","txt","extend","redef","inside","before","insert","grammar","old","DFS","propertyType","plugins","highlightAll","highlightAllUnder","container","env","selector","run","elements","querySelectorAll","highlightElement","insertHighlightedCode","highlightedCode","Worker","worker","filename","onmessage","evt","postMessage","JSON","stringify","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","toArray","callbacks","matchedStr","s","classes","aliases","matchPattern","pattern","pos","lookbehind","lookbehindLength","startNode","startPos","rematch","patterns","cause","patternObj","greedy","global","flags","tail","reach","removeCount","to","p","matchStr","after","removeFrom","prev","removeRange","wrapped","nestedRematch","newNode","addEventListener","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","setTimeout","module","exports","markup","prolog","string","cdata","namespace","entity","includedCdataInside","mathml","ssml","atom","rss","css","atrule","rule","keyword","function","important","addInlined","addAttribute","clike","boolean","number","operator","javascript","parameter","constant","hashbang","interpolation","js","msMatchesSelector","webkitMatchesSelector","LOADING_MESSAGE","FAILURE_MESSAGE","status","FAILURE_EMPTY_MESSAGE","EXTENSIONS","py","rb","ps1","psm1","sh","bat","h","tex","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","STATUS_FAILED","SELECTOR","loadFile","success","xhr","XMLHttpRequest","open","onreadystatechange","responseText","statusText","send","parseRange","range","Number","comma","end","extension","autoloader","loadLanguages","max","fileHighlight","logged","char","macro","directive","expression","modName","cpp","generic","lua","json","null","webmanifest","python","decorator","builtin","inner","createInline","tableCell","tableLine","yaml","variable","bold","italic","strike","codeLang","codeBlock","cls","Date","valueOf","floor","ele","getElementById","tagPattern","KNOWN_ENTITY_NAMES","amp","lt","quot","fromCodePoint","known","md","deepCompareStrict","a","typeofa","aKeys","bKeys","encodePointer","escapePointer","schemaArrayKeyword","prefixItems","allOf","anyOf","oneOf","schemaMapKeyword","$defs","definitions","properties","patternProperties","dependentSchemas","ignoredKeyword","$id","$ref","$schema","$anchor","$vocabulary","$comment","default","enum","const","required","maximum","minimum","exclusiveMaximum","exclusiveMinimum","multipleOf","maxLength","minLength","format","maxItems","minItems","uniqueItems","maxProperties","minProperties","initialBaseURI","location","origin","URL","pathname","dereference","schema","lookup","baseURI","basePointer","hash","schemaURI","__absolute_uri__","__absolute_ref__","$recursiveRef","__absolute_recursive_ref__","keyBase","subSchema","subKey","DATE","DAYS","TIME","HOSTNAME","URIREF","URITEMPLATE","URL_","UUID","JSON_POINTER","JSON_POINTER_URI_FRAGMENT","RELATIVE_JSON_POINTER","FASTDATE","FASTTIME","FASTDATETIME","FASTURIREFERENCE","EMAIL","input","host","endsWith","every","part","IPV4","IPV6","DURATION","bind","fullFormat","date","time","date_time","duration","uri","hostname","ipv4","ipv6","uuid","fastFormat","isLeapYear","year","month","day","full","hour","minute","second","timeZone","DATE_TIME_SEPARATOR","dateTime","NOT_URI_FRAGMENT","URI_PATTERN","Z_ANCHOR","ucs2length","result","charCode","validate","instance","draft","shortCircuit","recursiveAnchor","instanceLocation","schemaLocation","evaluated","valid","errors","keywordLocation","rawInstanceType","instanceType","$recursiveAnchor","$type","$const","$enum","$required","not","$not","$anyOf","$allOf","$oneOf","if","$if","$then","else","$else","$format","$properties","$patternProperties","additionalProperties","$additionalProperties","unevaluatedProperties","$unevaluatedProperties","$minProperties","$maxProperties","propertyNames","$propertyNames","dependentRequired","$dependentRequired","$dependentSchemas","dependencies","$dependencies","$prefixItems","$items","additionalItems","$additionalItems","unevaluatedItems","$unevaluatedItems","$contains","minContains","$minContains","maxContains","$maxContains","$minItems","$maxItems","$uniqueItems","$minimum","$maximum","$exclusiveMinimum","$exclusiveMaximum","$multipleOf","$minLength","$maxLength","$pattern","refSchema","subEvaluateds","errorsLength","anyValid","subEvaluated","allValid","assign","thenResult","elseResult","subInstancePointer","dependantKey","propsOrSchema","thisEvaluated","stop","length2","contained","ao","bo","MAX_SAFE_INTEGER","remainder","abs","Validator"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]}