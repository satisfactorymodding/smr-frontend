{"version":3,"file":"AnnouncementRow.BvoYkA2c.js","sources":["../../../../../../src/lib/components/announcements/AnnouncementRow.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { AnnouncementImportance } from '$lib/generated';\n  import { markdown } from '$lib/utils/markdown';\n\n  const iconNames: { [key in AnnouncementImportance]: string } = {\n    [AnnouncementImportance.Info]: 'info',\n    [AnnouncementImportance.Alert]: 'error',\n    [AnnouncementImportance.Warning]: 'warning',\n    [AnnouncementImportance.Fix]: 'build_circle'\n  };\n  const backgroundColors: { [key in AnnouncementImportance]: string } = {\n    [AnnouncementImportance.Info]: 'bg-sky-500',\n    [AnnouncementImportance.Alert]: 'bg-red-600',\n    [AnnouncementImportance.Warning]: 'bg-yellow-400',\n    [AnnouncementImportance.Fix]: 'bg-green-600'\n  };\n  const monospacePrefix = 'monotext:';\n\n  export let message: string;\n  export let importance: AnnouncementImportance;\n\n  // Enables making monospace announcements\n  $: isMonospace = message.startsWith(monospacePrefix);\n  $: finalMessage = isMonospace ? message.replaceAll(monospacePrefix, '') : message;\n</script>\n\n<div class=\"{backgroundColors[importance]} max-h-64 overflow-hidden rounded-sm\">\n  <div class=\"striped p-1 text-black\">\n    <span class=\"material-icons align-middle text-2xl\">{iconNames[importance]}</span>\n    <div\n      class=\"text-l announcement-markdown inline-block max-w-full break-words align-middle\"\n      class:font-mono={isMonospace}\n      class:whitespace-pre={isMonospace}>\n      <b>{importance}: </b>\n      {#await markdown(finalMessage, true) then previewRendered}\n        <!-- eslint-disable-next-line -->\n        {@html previewRendered}\n      {/await}\n    </div>\n  </div>\n</div>\n\n<style>\n  .striped {\n    background: repeating-linear-gradient(\n      45deg,\n      transparent,\n      transparent 14px,\n      rgba(60, 60, 60, 0.1) 14px,\n      rgba(60, 60, 60, 0.1) 28px\n    );\n  }\n</style>\n"],"names":["ctx","html_tag","p","raw_value","t0_value","markdown","info","attr_dev","div2","div2_class_value","insert_hydration_dev","target","anchor","append_hydration_dev","div1","span","div0","b","dirty","set_data_dev","t0","handle_promise","promise","monospacePrefix","iconNames","AnnouncementImportance","Info","Alert","Warning","Fix","backgroundColors","message","$$props","importance","isMonospace","startsWith","$$invalidate","finalMessage","replaceAll"],"mappings":"4jBAoCeA,EAAe,CAAA,EAAA,sLAAfA,EAAe,CAAA,EAAA,KAAAC,EAAAC,EAAAC,8ZAR0BC,EAAAJ,GAAUA,EAAAA,EAAU,CAAA,CAAA,EAAA,wGAM9DK,EAASL,EAAY,CAAE,EAAA,EAAA,EAAIM,gGAD/BN,EAAU,QAAC,GAAA,qPAAXA,EAAU,CAAA,CAAA,QAAC,sSAFEA,EAAW,CAAA,CAAA,uBACNA,EAAW,0FAN1BO,EAAAC,EAAA,QAAAC,EAAAT,KAAiBA,EAAU,CAAA,CAAA,EAAA,qDAAA,mCAAxCU,EAcKC,EAAAH,EAAAI,CAAAA,EAbHC,EAYKL,EAAAM,CAXHD,EAAAA,EAAgFC,EAAAC,eAChFF,EAAAA,EASKC,EAAAE,CAAAA,EALHH,EAAoBG,EAAAC,sGAL8BC,EAAA,GAAAd,KAAAA,EAAAJ,KAAUA,EAAU,CAAA,CAAA,EAAA,KAAAmB,EAAAC,EAAAhB,CAAAA,WAKlEJ,EAAU,CAAA,CAAA,sBACNK,EAASL,EAAY,GAAE,EAAIqB,IAAAA,EAAAC,EAAAhB,CAAAA,iCAHlBN,EAAW,CAAA,CAAA,4BACNA,EAAW,CAAA,CAAA,EAN1BkB,EAAA,GAAAT,KAAAA,EAAAT,KAAiBA,EAAU,CAAA,CAAA,EAAA,+NAVhC,MAAAuB,EAAkB,kGAZlBC,EAAS,EACZC,EAAuBC,IAAAA,EAAO,QAC9BD,EAAuBE,KAAQ,EAAA,SAC/BF,EAAuBG,OAAU,EAAA,WACjCH,EAAuBI,GAAM,EAAA,cAAA,EAE1BC,EAAgB,EACnBL,EAAuBC,IAAO,EAAA,cAC9BD,EAAuBE,KAAQ,EAAA,cAC/BF,EAAuBG,OAAU,EAAA,iBACjCH,EAAuBI,GAAM,EAAA,cAAA,cAIrBE,CAAeC,EAAAA,cACfC,CAAkCD,EAAAA,q/BAG1CE,EAAcH,EAAQI,WAAWZ,CAAAA,CAAAA,iBACnCa,EAAA,EAAEC,EAAeH,EAAcH,EAAQO,WAAWf,EAAiB,EAAA,EAAMQ"}