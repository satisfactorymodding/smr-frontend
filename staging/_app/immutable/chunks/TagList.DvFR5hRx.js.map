{"version":3,"file":"TagList.DvFR5hRx.js","sources":["../../../../../../src/lib/components/utils/TagDisplay.svelte","../../../../../../src/lib/components/utils/TagList.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { type Tag } from '$lib/generated';\n  import { popup, type PopupSettings } from '@skeletonlabs/skeleton';\n  export let tag: Tag;\n  export let asButton = false;\n  export let selected = false;\n  export let popupTriggerEvent: PopupSettings['event'] | null = 'click';\n\n  $: popupHover = {\n    event: popupTriggerEvent,\n    target: `popupHoverFor${tag.id}`,\n    placement: 'bottom-start'\n  } satisfies PopupSettings;\n</script>\n\n<button\n  class={asButton ? 'chip hover:variant-filled-surface [&:not(:hover)]:variant-soft' : ''}\n  class:selected\n  use:popup={popupHover}\n  on:click>\n  <div\n    class=\"lowercase text-neutral-300 [&>*]:pointer-events-none\"\n    title={popupTriggerEvent === 'click' ? 'Click for tag information' : ''}>\n    <span class=\"text-orange-500\">#</span>{tag.name}\n  </div>\n</button>\n\n<!-- Must use high z-index to ensure it draws on top of things like striped compatibility overlays in mod cards -->\n<!-- For some reason this still isn't able to draw over the ModGrid paginator-->\n<!-- https://floating-ui.com/docs/misc#z-index-stacking -->\n<div class=\"card variant-filled-surface p-4\" data-popup={`popupHoverFor${tag.id}`} style=\"z-index: 1000\">\n  <p>{tag.description}</p>\n</div>\n\n<style lang=\"postcss\">\n  .selected {\n    @apply variant-ghost-primary hover:variant-ringed-primary;\n  }\n</style>\n","<script lang=\"ts\">\n  import { GetTagsDocument } from '$lib/generated/graphql';\n  import type { Tag } from '$lib/generated/graphql';\n  import { queryStore, getContextClient } from '@urql/svelte';\n  import { Autocomplete, type AutocompleteOption, InputChip, type PopupSettings, popup } from '@skeletonlabs/skeleton';\n  import { onMount } from 'svelte';\n  import TagDisplay from './TagDisplay.svelte';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export const { t } = getTranslate();\n\n  const client = getContextClient();\n\n  const getAllTags = queryStore({\n    query: GetTagsDocument,\n    client,\n    variables: {\n      limit: 100\n    }\n  });\n\n  export let tags: Tag[] = [];\n  export let editable = false;\n  export let popupTriggerEvent: PopupSettings['event'] = 'click';\n\n  $: allTags =\n    $getAllTags.data?.getTags?.map((tag) => ({\n      label: `${tag.name} - ${tag.description}`,\n      value: tag.id,\n      name: tag.name\n    })) || ([] satisfies AutocompleteOption[]);\n\n  const popupSettings: PopupSettings = {\n    event: 'focus-click',\n    target: 'popupAutocomplete',\n    placement: 'bottom-start'\n  };\n  let tagList = [];\n  const loadTagList = () => (tagList = tags.map((tag: Tag) => tag.name));\n\n  onMount(loadTagList);\n\n  const addTag = (tagToAdd: AutocompleteOption) => {\n    const realTag = $getAllTags.data?.getTags?.find((tag) => tag.id == tagToAdd.value);\n    tags = [\n      ...tags,\n      {\n        id: tagToAdd.value,\n        name: realTag?.name,\n        description: realTag?.description\n      }\n    ];\n\n    loadTagList();\n  };\n\n  const removeTag = (label: string) => {\n    const idx = tags.findIndex((tag) => tag.name === label);\n    tags = [...tags.slice(0, idx), ...tags.slice(idx + 1)];\n    loadTagList();\n  };\n\n  let inputTag = '';\n</script>\n\n<div class=\"tags\">\n  {#if !editable}\n    {#if tags && tags.length > 0}\n      <div class=\"text-md flex flex-row flex-wrap gap-1\">\n        {#each tags as tag}\n          <TagDisplay {tag} {popupTriggerEvent} />\n        {/each}\n      </div>\n    {/if}\n  {:else}\n    <div class=\"mb-2\">{$t('mod.tags.title')}</div>\n\n    <div use:popup={popupSettings}>\n      <InputChip\n        bind:input={inputTag}\n        bind:value={tagList}\n        on:remove={(tag) => removeTag(tag.detail.chipValue)}\n        name=\"tags\"\n        chips=\"variant-filled-primary\" />\n    </div>\n\n    <div class=\"card max-h-48 w-max max-w-full overflow-y-auto p-4\" tabindex=\"-1\" data-popup=\"popupAutocomplete\">\n      <Autocomplete\n        bind:input={inputTag}\n        options={allTags.filter((tag) => tagList.indexOf(tag.name) < 0)}\n        on:selection={(tag) => addTag(tag.detail)} />\n    </div>\n  {/if}\n</div>\n"],"names":["t1_value","ctx","name","t3_value","description","attr_dev","div0","div0_title_value","div1","div1_data_popup_value","id","insert_hydration_dev","target","button","anchor","append_hydration_dev","span","p","dirty","set_data_dev","t1","t3","tag","$$props","asButton","selected","popupTriggerEvent","popupHover","event","placement","t0_value","options","filter","div2","current","t0","autocomplete_changes","if_block","length","create_if_block_1","i","div","each_blocks","t","getTranslate","client","getContextClient","getAllTags","queryStore","query","GetTagsDocument","variables","limit","tags","editable","popupSettings","tagList","loadTagList","$$invalidate","map","onMount","addTag","tagToAdd","realTag","$getAllTags","data","getTags","find","value","removeTag","label","idx","findIndex","slice","inputTag","remove_handler","detail","chipValue","indexOf","selection_handler","allTags"],"mappings":"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"}