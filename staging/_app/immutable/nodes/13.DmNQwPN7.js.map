{"version":3,"file":"13.DmNQwPN7.js","sources":["../../../../../../src/lib/components/guides/GuideGrid.svelte","../../../../../../src/routes/guides/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { queryStore, getContextClient } from '@urql/svelte';\n  import { GetGuidesDocument } from '$lib/generated';\n  import GuideCard from './GuideCard.svelte';\n  import { base } from '$app/paths';\n  import { user } from '$lib/stores/user';\n  import FicsitCard from '$lib/components/general/FicsitCard.svelte';\n  import { getTranslate } from '@tolgee/svelte';\n  import { type PaginationSettings, Paginator } from '@skeletonlabs/skeleton';\n\n  export let colCount: 4 | 5 = 4;\n  export let newGuide = false;\n\n  const client = getContextClient();\n\n  let perPage = 32;\n  let page = 0;\n\n  export const { t } = getTranslate();\n\n  $: guides = queryStore({\n    query: GetGuidesDocument,\n    client,\n    variables: { offset: page * perPage, limit: perPage }\n  });\n\n  $: totalGuides = $guides?.data?.getGuides?.count || 0;\n\n  $: gridClasses =\n    colCount == 4\n      ? '3xl:grid-cols-4 2xl:grid-cols-3 lg:grid-cols-2 grid-cols-1'\n      : '3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1';\n\n  $: paginationSettings = {\n    page: page,\n    limit: perPage,\n    size: totalGuides,\n    amounts: [8, 16, 32, 64, 100]\n  } satisfies PaginationSettings;\n</script>\n\n<div\n  class=\"mb-5 ml-auto flex\"\n  class:justify-between={newGuide && $user !== null}\n  class:justify-end={!newGuide || $user == null}>\n  {#if newGuide && $user !== null}\n    <a class=\"variant-ghost-primary btn\" href=\"{base}/new-guide\">{$t('guides.new')}</a>\n  {/if}\n\n  <div>\n    <Paginator\n      bind:settings={paginationSettings}\n      showFirstLastButtons={true}\n      showPreviousNextButtons={true}\n      on:page={(p) => (page = p.detail)}\n      on:amount={(p) => (perPage = p.detail)}\n      controlVariant=\"variant-filled-surface\" />\n  </div>\n</div>\n\n{#if $guides.fetching}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each Array(perPage) as _}\n      <FicsitCard fake />\n    {/each}\n  </div>\n{:else if $guides.error}\n  <p>{$t('error.oh-no')} {$guides.error.message}</p>\n{:else}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each $guides.data.getGuides.guides as guide}\n      <GuideCard {guide} logo={guide.user.avatar} />\n    {/each}\n  </div>\n{/if}\n\n<div class=\"ml-auto mt-5 flex justify-end\">\n  <div>\n    <Paginator\n      bind:settings={paginationSettings}\n      showFirstLastButtons={true}\n      showPreviousNextButtons={true}\n      on:page={(p) => (page = p.detail)}\n      on:amount={(p) => (perPage = p.detail)}\n      controlVariant=\"variant-filled-surface\" />\n  </div>\n</div>\n","<script lang=\"ts\">\n  import GuideGrid from '$lib/components/guides/GuideGrid.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Guides for Satisfactory and modding Satisfactory\" title=\"Guides\" />\n</svelte:head>\n\n<GuideGrid newGuide={true} colCount={4} />\n"],"names":["t_1_value","ctx","base","insert_hydration_dev","target","a","anchor","dirty","set_data_dev","t_1","each_value_1","ensure_array_like_dev","data","getGuides","guides","length","i","div","each_blocks","t0_value","error","message","p","t0","t2","t2_value","each_value","Array","user","avatar","create_if_block_2","fetching","div1","append_hydration_dev","div0","div3","div2","colCount","$$props","newGuide","client","getContextClient","perPage","page","t","getTranslate","paginationSettings","value","page_handler","$$invalidate","detail","amount_handler","page_handler_1","amount_handler_1","$$subscribe_guides","queryStore","query","GetGuidesDocument","variables","offset","limit","totalGuides","$guides","count","gridClasses","size","amounts","props"],"mappings":"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"}