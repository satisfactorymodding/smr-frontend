{"version":3,"file":"7.BeN9a3wE.js","sources":["../../../../../../src/routes/admin/unapproved-versions/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { ApproveVersionDocument, DenyVersionDocument, GetUnapprovedVersionsDocument } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { API_REST } from '$lib/core';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import { prettyDate } from '$lib/utils/formatting';\n  import { type PaginationSettings, Paginator } from '@skeletonlabs/skeleton';\n\n  const client = getContextClient();\n\n  let perPage = 20;\n  let page = 1;\n\n  $: versions = queryStore({\n    query: GetUnapprovedVersionsDocument,\n    client,\n    variables: {\n      filter: {\n        offset: (page - 1) * perPage,\n        limit: perPage\n      }\n    }\n  });\n\n  $: totalVersions = $versions?.data?.getUnapprovedVersions?.count;\n\n  const approveVersion = (versionId: string) => {\n    client\n      .mutation(ApproveVersionDocument, { versionId })\n      .toPromise()\n      .then(() => {\n        versions.pause();\n        versions.resume();\n      });\n  };\n\n  const denyVersion = (versionId: string) => {\n    client\n      .mutation(DenyVersionDocument, { versionId })\n      .toPromise()\n      .then(() => {\n        versions.pause();\n        versions.resume();\n      });\n  };\n\n  $: paginationSettings = {\n    page: page,\n    limit: perPage,\n    size: totalVersions,\n    amounts: [5, 10, 20, 50, 100]\n  } satisfies PaginationSettings;\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Unapproved mod versions\" title=\"Admin: Unapproved Versions\" />\n</svelte:head>\n\n{#if totalVersions}\n  <div class=\"mb-5 ml-auto flex justify-end\">\n    <div>\n      <Paginator\n        bind:settings={paginationSettings}\n        showFirstLastButtons={true}\n        showPreviousNextButtons={true}\n        on:page={(p) => (page = p.detail)}\n        on:amount={(p) => (perPage = p.detail)}\n        controlVariant=\"variant-filled-surface\" />\n    </div>\n  </div>\n{/if}\n\n<div class=\"card\">\n  {#if $versions.fetching}\n    <section class=\"p-4\">Loading...</section>\n  {:else if $versions.error}\n    <section class=\"p-4\">Oh no... {$versions.error.message}</section>\n  {:else}\n    <table class=\"table table-hover max-w-full\">\n      <thead>\n        <tr>\n          <th>Mod</th>\n          <th>Version</th>\n          <th>Release Date</th>\n          <th><!-- Buttons --></th>\n        </tr>\n      </thead>\n      <tbody>\n        {#each $versions.data.getUnapprovedVersions.versions as version}\n          <tr>\n            <td>{version.mod.name}</td>\n            <td>{version.version}</td>\n            <td>{prettyDate(version.created_at)}</td>\n            <td class=\"!p-2.5\">\n              <div class=\"grid grid-flow-col gap-4\">\n                <button class=\"variant-ghost-primary btn\" on:click={() => approveVersion(version.id)}>Approve</button>\n                <button class=\"variant-ghost-primary btn\" on:click={() => denyVersion(version.id)}>Deny</button>\n                <a\n                  class=\"variant-ghost-primary btn\"\n                  href={API_REST + '/mod/' + version.mod_id + '/versions/' + version.id + '/download'}>\n                  Download\n                </a>\n                <a class=\"variant-ghost-primary btn\" href={base + '/mod/' + version.mod_id + '/version/' + version.id}>\n                  View\n                </a>\n              </div>\n            </td>\n          </tr>\n        {/each}\n      </tbody>\n    </table>\n  {/if}\n</div>\n\n{#if totalVersions}\n  <div class=\"ml-auto mt-5 flex justify-end\">\n    <Paginator\n      bind:settings={paginationSettings}\n      showFirstLastButtons={true}\n      showPreviousNextButtons={true}\n      on:page={(p) => (page = p.detail)}\n      on:amount={(p) => (perPage = p.detail)}\n      controlVariant=\"variant-filled-surface\" />\n  </div>\n{/if}\n"],"names":["ctx","insert_hydration_dev","target","div1","anchor","append_hydration_dev","div0","each_value","ensure_array_like_dev","data","getUnapprovedVersions","versions","length","i","table","thead","tr","th0","th1","th2","th3","tbody","error","message","section","set_data_dev","t1","t1_value","mod","name","t2_value","version","prettyDate","created_at","attr_dev","a0","a0_href_value","API_REST","mod_id","id","base","td0","td1","td2","td3","div","button0","button1","a1","t0","t0_value","dirty","t2","t4","t4_value","create_if_block_3","fetching","create_if_block_1","create_if_block_2","create_if_block","client","getContextClient","perPage","page","approveVersion","versionId","mutation","ApproveVersionDocument","toPromise","then","pause","resume","denyVersion","DenyVersionDocument","paginationSettings","value","page_handler","p","$$invalidate","detail","amount_handler","page_handler_1","amount_handler_1","$$subscribe_versions","queryStore","query","GetUnapprovedVersionsDocument","variables","filter","offset","limit","totalVersions","$versions","count","size","amounts"],"mappings":"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"}