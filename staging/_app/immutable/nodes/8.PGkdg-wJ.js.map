{"version":3,"file":"8.PGkdg-wJ.js","sources":["../../../../../../src/routes/admin/unapproved-versions/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { ApproveVersionDocument, DenyVersionDocument, GetUnapprovedVersionsDocument } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { API_REST } from '$lib/core';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import { prettyDate } from '$lib/utils/formatting';\n  import { type PaginationSettings, Paginator } from '@skeletonlabs/skeleton';\n\n  const client = getContextClient();\n\n  let perPage = 20;\n  let page = 1;\n\n  $: versions = queryStore({\n    query: GetUnapprovedVersionsDocument,\n    client,\n    variables: {\n      filter: {\n        offset: (page - 1) * perPage,\n        limit: perPage\n      }\n    }\n  });\n\n  $: totalVersions = $versions?.data?.getUnapprovedVersions?.count;\n\n  const approveVersion = (versionId: string) => {\n    client\n      .mutation(ApproveVersionDocument, { versionId })\n      .toPromise()\n      .then(() => {\n        versions.pause();\n        versions.resume();\n      });\n  };\n\n  const denyVersion = (versionId: string) => {\n    client\n      .mutation(DenyVersionDocument, { versionId })\n      .toPromise()\n      .then(() => {\n        versions.pause();\n        versions.resume();\n      });\n  };\n\n  $: paginationSettings = {\n    page: page,\n    limit: perPage,\n    size: totalVersions,\n    amounts: [5, 10, 20, 50, 100]\n  } satisfies PaginationSettings;\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Unapproved mod versions\" title=\"Admin: Unapproved Versions\" />\n</svelte:head>\n\n<h1>Unapproved Versions</h1>\n\n{#if totalVersions}\n  <div class=\"mb-5 ml-auto flex justify-end\">\n    <div>\n      <Paginator\n        bind:settings={paginationSettings}\n        showFirstLastButtons={true}\n        showPreviousNextButtons={true}\n        on:page={(p) => (page = p.detail)}\n        on:amount={(p) => (perPage = p.detail)}\n        controlVariant=\"variant-filled-surface\" />\n    </div>\n  </div>\n{/if}\n\n<div class=\"card\">\n  {#if $versions.fetching}\n    <section class=\"p-4\">Loading...</section>\n  {:else if $versions.error}\n    <section class=\"p-4\">Oh no... {$versions.error.message}</section>\n  {:else}\n    <table class=\"table table-hover max-w-full\">\n      <thead>\n        <tr>\n          <th>Mod</th>\n          <th>Version</th>\n          <th>Release Date</th>\n          <th><!-- Buttons --></th>\n        </tr>\n      </thead>\n      <tbody>\n        {#each $versions.data.getUnapprovedVersions.versions as version}\n          <tr>\n            <td>{version.mod.name}</td>\n            <td>{version.version}</td>\n            <td>{prettyDate(version.created_at)}</td>\n            <td class=\"!p-2.5\">\n              <div class=\"grid grid-flow-col gap-4\">\n                <button class=\"variant-ghost-primary btn\" on:click={() => approveVersion(version.id)}>Approve</button>\n                <button class=\"variant-ghost-primary btn\" on:click={() => denyVersion(version.id)}>Deny</button>\n                <a\n                  class=\"variant-ghost-primary btn\"\n                  href={API_REST + '/mod/' + version.mod_id + '/versions/' + version.id + '/download'}>\n                  Download\n                </a>\n                <a class=\"variant-ghost-primary btn\" href={base + '/mod/' + version.mod_id + '/version/' + version.id}>\n                  View\n                </a>\n              </div>\n            </td>\n          </tr>\n        {/each}\n      </tbody>\n    </table>\n  {/if}\n</div>\n\n{#if totalVersions}\n  <div class=\"ml-auto mt-5 flex justify-end\">\n    <Paginator\n      bind:settings={paginationSettings}\n      showFirstLastButtons={true}\n      showPreviousNextButtons={true}\n      on:page={(p) => (page = p.detail)}\n      on:amount={(p) => (perPage = p.detail)}\n      controlVariant=\"variant-filled-surface\" />\n  </div>\n{/if}\n\n<style lang=\"postcss\">\n  h1 {\n    @apply my-4 text-4xl font-bold;\n  }\n</style>\n"],"names":["ctx","insert_hydration_dev","target","div1","anchor","append_hydration_dev","div0","each_value","ensure_array_like_dev","data","getUnapprovedVersions","versions","length","i","table","thead","tr","th0","th1","th2","th3","tbody","error","message","section","set_data_dev","t1","t1_value","mod","name","t2_value","version","prettyDate","created_at","attr_dev","a0","a0_href_value","API_REST","mod_id","id","base","td0","td1","td2","td3","div","button0","button1","a1","t0","t0_value","dirty","t2","t4","t4_value","create_if_block_3","fetching","create_if_block_1","create_if_block_2","create_if_block","h1","client","getContextClient","perPage","page","approveVersion","versionId","mutation","ApproveVersionDocument","toPromise","then","pause","resume","denyVersion","DenyVersionDocument","paginationSettings","value","page_handler","p","$$invalidate","detail","amount_handler","page_handler_1","amount_handler_1","$$subscribe_versions","queryStore","query","GetUnapprovedVersionsDocument","variables","filter","offset","limit","totalVersions","$versions","count","size","amounts"],"mappings":"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"}