{"version":3,"file":"6.B1eqv8oa.js","sources":["../../../../../../src/routes/admin/tag-manager/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { CreateTagDocument, DeleteTagDocument, GetTagsDocument, UpdateTagDocument } from '$lib/generated';\n  import type { Tag } from '$lib/generated';\n  import { Accordion, AccordionItem, getToastStore } from '@skeletonlabs/skeleton';\n\n  const client = getContextClient();\n\n  let tags: Tag[] = [];\n  const panels = {};\n  const nameFields = {};\n  let tagNegativeID = -1;\n  const defaultNewTagName = 'New Tag';\n\n  const tagsQuery = queryStore({\n    query: GetTagsDocument,\n    client,\n    variables: {\n      limit: 100\n    }\n  });\n\n  $: tags = $tagsQuery.data?.getTags || [];\n\n  const toastStore = getToastStore();\n\n  function newTag() {\n    if (!tags.find((tag) => tag.name == defaultNewTagName)) {\n      const tag = { id: tagNegativeID--, name: defaultNewTagName, description: 'Description' } as Tag;\n      tags.push(tag);\n      tags = tags;\n      setTimeout(() => {\n        panels[tag.id].setOpen(true);\n        const field = nameFields[tag.id];\n        field.focus();\n        const input = field.getElement().querySelectorAll('input')[0] as HTMLInputElement;\n        input.select();\n      }, 0);\n    } else {\n      panels[tags[tags.length - 1].id].setOpen(true);\n      nameFields[tags[tags.length - 1].id].focus();\n    }\n  }\n\n  async function tagChange(tag: Tag) {\n    if (tag.name == defaultNewTagName) {\n      return;\n    }\n\n    let success = false;\n    if (tag.id < 0) {\n      // Create new tag & update tag.id with new DB id or re-fetch all tags\n      try {\n        const result = await client\n          .mutation(CreateTagDocument, { tagName: tag.name, description: tag.description })\n          .toPromise();\n        if (result.data) {\n          tag.id = result.data.createTag.id;\n          success = true;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n      if (!success) {\n        toastStore.trigger({\n          message: `Failed to create Tag '${tag.name}'!`,\n          background: 'variant-filled-error',\n          timeout: 2000\n        });\n        return;\n      }\n    } else {\n      // Update existing tag\n      try {\n        success =\n          (\n            await client\n              .mutation(UpdateTagDocument, { tagID: tag.id, tagName: tag.name, description: tag.description })\n              .toPromise()\n          ).data.updateTag != null;\n      } catch {\n        // nothing\n      }\n      if (!success) {\n        toastStore.trigger({\n          message: `Failed to update Tag '${tag.name}'!`,\n          background: 'variant-filled-error',\n          timeout: 2000\n        });\n        return;\n      }\n    }\n\n    toastStore.trigger({\n      message: `Tag '${tag.name}' saved!`,\n      background: 'variant-filled-success',\n      timeout: 2000\n    });\n  }\n\n  async function deleteTag(tag: Tag) {\n    if (tag.name != defaultNewTagName) {\n      // Remove tag\n      let success = false;\n      try {\n        const result = await client.mutation(DeleteTagDocument, { tagID: tag.id }).toPromise();\n        success = result.data.deleteTag;\n      } catch {\n        success = false;\n      }\n      if (!success) {\n        toastStore.trigger({\n          message: `Failed to remove Tag '${tag.name}'!`,\n          background: 'variant-filled-error',\n          timeout: 2000\n        });\n        return;\n      }\n    } else {\n      tags.splice(tags.indexOf(tag), 1);\n    }\n\n    toastStore.trigger({\n      message: `Tag '${tag.name}' removed!`,\n      background: 'variant-filled-success',\n      timeout: 2000\n    });\n  }\n\n  function onDeleteClick(e: Event, tag: Tag) {\n    e.stopPropagation();\n    deleteTag(tag);\n  }\n</script>\n\n<h1>Mod Tag Manager</h1>\n\n<div class=\"card\">\n  {#if $tagsQuery.fetching}\n    <h1>Loading tags...</h1>\n  {:else if $tagsQuery.error}\n    <h1>Failed to load tags: {$tagsQuery.error.message}</h1>\n  {:else}\n    <Accordion>\n      {#each tags as tag}\n        <AccordionItem bind:this={panels[tag.id]}>\n          <svelte:fragment slot=\"summary\">{tag.name}</svelte:fragment>\n          <svelte:fragment slot=\"content\">\n            <div>\n              <div>Tag name</div>\n              <input\n                type=\"text\"\n                class=\"input p-2\"\n                bind:value={tag.name}\n                placeholder=\"Name\"\n                bind:this={nameFields[tag.id]}\n                on:change={() => tagChange(tag)} />\n              <div>Tag description</div>\n              <input\n                type=\"text\"\n                class=\"input p-2\"\n                bind:value={tag.description}\n                placeholder=\"Description\"\n                on:change={() => tagChange(tag)} />\n            </div>\n            <span slot=\"helper\">Human-Readable name and description of the tag that is shown in UI</span>\n\n            <button class=\"variant-ghost-error btn\" on:click={(e) => onDeleteClick(e, tag)}>\n              <span>Delete</span>\n            </button>\n          </svelte:fragment>\n        </AccordionItem>\n      {/each}\n    </Accordion>\n\n    <section class=\"p-4\">\n      <button class=\"variant-ghost-primary btn\" on:click={newTag}>\n        <span>Add new tag</span>\n        <span class=\"material-icons\">add</span>\n      </button>\n    </section>\n  {/if}\n</div>\n\n<style lang=\"postcss\">\n  h1 {\n    @apply my-4 text-4xl font-bold;\n  }\n</style>\n"],"names":["insert_hydration_dev","target","section","anchor","append_hydration_dev","button","span0","span1","ctx","error","message","h1","set_data_dev","t1","t1_value","t_value","name","dirty","t","div2","div0","input0","set_input_value","div1","input1","description","value","length","i","each_blocks","fetching","div","defaultNewTagName","client","getContextClient","tags","panels","nameFields","tagNegativeID","tagsQuery","queryStore","query","GetTagsDocument","variables","limit","toastStore","getToastStore","newTag","find","tag","id","setOpen","focus","push","setTimeout","field","getElement","querySelectorAll","input","select","async","tagChange","success","result","mutation","CreateTagDocument","tagName","toPromise","data","createTag","err","console","log","trigger","background","timeout","UpdateTagDocument","tagID","updateTag","deleteTag","DeleteTagDocument","splice","indexOf","onDeleteClick","e","stopPropagation","this","$$value","change_handler","change_handler_1","click_handler","$tagsQuery","getTags"],"mappings":"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"}