name: Base

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string

# cspell:ignore snok rlespinasse

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        action: [ "build:node", "build:static" ]
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: package.json

      - name: Install dependencies
        run: bun install

      - name: Build
        run: |
          set -o allexport; source .env.${{ inputs.env }}; set +o allexport
          bun run graphql-codegen && bun run translations && bun run ${{ matrix.action }}
        env:
          NODE_ENV: ${{ inputs.env }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: package.json

      - name: Install dependencies
        run: bun install

      - name: Lint
        run: |
          set -o allexport; source .env.${{ inputs.env }}; set +o allexport
          bun run postinstall && bun run graphql-codegen && bun run check && bun run lint
        env:
          NODE_ENV: ${{ inputs.env }}

  pages:
    name: Pages
    runs-on: ubuntu-latest
    needs:
      - build
      - lint
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: package.json

      - name: Install dependencies
        run: bun install

      - uses: rlespinasse/github-slug-action@v4

      - name: Build
        run: |
          set -o allexport; source .env.${{ inputs.env }}; set +o allexport
          bun run graphql-codegen && bun run translations && bun run build:static
        env:
          SVELTE_BASE_PATH: "/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}/${{ env.GITHUB_REF_SLUG }}"
          NODE_ENV: ${{ inputs.env }}

      - name: Deploy to pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: build/static
          target-folder: ${{ env.GITHUB_REF_SLUG }}

  image:
    name: Image
    runs-on: ubuntu-latest
    needs:
      - build
      - lint
    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            latest=false
            suffix=-${{ github.run_id }}

      - uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NODE_ENV_ARG=${{ inputs.env }}

      - uses: snok/container-retention-policy@v3.0.0
        with:
          account: ${{ github.repository_owner }}
          token: ${{ secrets.GITHUB_TOKEN }}
          image-names: "smr-frontend"
          image-tags: "${{ inputs.env }}-*"
          cut-off: 4w
          dry-run: true
          keep-n-most-recent: 1
